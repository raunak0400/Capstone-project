{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rauna\\\\OneDrive\\\\Desktop\\\\v1.0\\\\staff-portal\\\\src\\\\components\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../utils/auth';\nimport Loader from './Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requiredRole\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    loading,\n    hasRole\n  } = useAuth();\n\n  // Show loader while checking authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If not authenticated, redirect to login\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If role is required and user doesn't have it, redirect to dashboard\n  if (requiredRole && !hasRole(requiredRole)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  // User is authenticated and has required role (if any)\n  return children;\n};\n_s(ProtectedRoute, \"PDMIApRN7KxKneDo1hmJUwV390c=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","Loader","jsxDEV","_jsxDEV","ProtectedRoute","children","requiredRole","_s","isAuthenticated","loading","hasRole","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["C:/Users/rauna/OneDrive/Desktop/v1.0/staff-portal/src/components/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../utils/auth';\nimport Loader from './Loader';\n\nconst ProtectedRoute = ({ children, requiredRole }) => {\n  const { isAuthenticated, loading, hasRole } = useAuth();\n\n  // Show loader while checking authentication\n  if (loading) {\n    return <Loader />;\n  }\n\n  // If not authenticated, redirect to login\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  // If role is required and user doesn't have it, redirect to dashboard\n  if (requiredRole && !hasRole(requiredRole)) {\n    return <Navigate to=\"/dashboard\" replace />;\n  }\n\n  // User is authenticated and has required role (if any)\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM;IAAEC,eAAe;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGV,OAAO,CAAC,CAAC;;EAEvD;EACA,IAAIS,OAAO,EAAE;IACX,oBAAON,OAAA,CAACF,MAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnB;;EAEA;EACA,IAAI,CAACN,eAAe,EAAE;IACpB,oBAAOL,OAAA,CAACJ,QAAQ;MAACgB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAIR,YAAY,IAAI,CAACI,OAAO,CAACJ,YAAY,CAAC,EAAE;IAC1C,oBAAOH,OAAA,CAACJ,QAAQ;MAACgB,EAAE,EAAC,YAAY;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7C;;EAEA;EACA,OAAOT,QAAQ;AACjB,CAAC;AAACE,EAAA,CApBIH,cAAc;EAAA,QAC4BJ,OAAO;AAAA;AAAAiB,EAAA,GADjDb,cAAc;AAsBpB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}