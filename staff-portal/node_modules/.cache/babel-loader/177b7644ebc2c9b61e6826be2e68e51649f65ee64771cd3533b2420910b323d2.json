{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rauna\\\\OneDrive\\\\Desktop\\\\v1.0\\\\staff-portal\\\\src\\\\pages\\\\Receptionist\\\\ReceptionistDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Card, ListGroup, Table, Badge, Form, ProgressBar } from \"react-bootstrap\";\nimport { CheckCircleFill, BellFill, PersonPlus, CalendarFill, HourglassSplit } from \"react-bootstrap-icons\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, PieChart, Pie, Cell } from \"recharts\";\n\n// ----- Mock Data -----\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockPatients = [{\n  id: 1,\n  name: \"Alice Smith\",\n  age: 30,\n  gender: \"Female\"\n}, {\n  id: 2,\n  name: \"Bob Johnson\",\n  age: 45,\n  gender: \"Male\"\n}, {\n  id: 3,\n  name: \"Charlie Brown\",\n  age: 28,\n  gender: \"Male\"\n}, {\n  id: 4,\n  name: \"Diana Prince\",\n  age: 35,\n  gender: \"Female\"\n}, {\n  id: 5,\n  name: \"Eve Adams\",\n  age: 22,\n  gender: \"Female\"\n}, {\n  id: 6,\n  name: \"Frank Wright\",\n  age: 50,\n  gender: \"Male\"\n}, {\n  id: 7,\n  name: \"Grace Lee\",\n  age: 40,\n  gender: \"Female\"\n}, {\n  id: 8,\n  name: \"Henry Ford\",\n  age: 33,\n  gender: \"Male\"\n}, {\n  id: 9,\n  name: \"Ivy Baker\",\n  age: 29,\n  gender: \"Female\"\n}, {\n  id: 10,\n  name: \"Jack Black\",\n  age: 38,\n  gender: \"Male\"\n}];\nconst mockTasks = [{\n  id: 1,\n  task: \"Call Alice Smith for appointment confirmation\",\n  completed: true\n}, {\n  id: 2,\n  task: \"Prepare new patient forms\",\n  completed: true\n}, {\n  id: 3,\n  task: \"Follow up with Dr. John Doe\",\n  completed: false\n}, {\n  id: 4,\n  task: \"Check lab results for Charlie Brown\",\n  completed: true\n}, {\n  id: 5,\n  task: \"Update insurance info for Diana Prince\",\n  completed: false\n}, {\n  id: 6,\n  task: \"Schedule appointment for Eve Adams\",\n  completed: true\n}, {\n  id: 7,\n  task: \"Verify documents for Frank Wright\",\n  completed: false\n}, {\n  id: 8,\n  task: \"Prepare monthly report\",\n  completed: false\n}, {\n  id: 9,\n  task: \"Confirm new registrations\",\n  completed: true\n}, {\n  id: 10,\n  task: \"Review patient feedback\",\n  completed: false\n}];\nconst mockNotifications = [{\n  id: 1,\n  message: \"Appointment canceled by Bob Johnson\",\n  type: \"warning\"\n}, {\n  id: 2,\n  message: \"New patient registered: Diana Prince\",\n  type: \"info\"\n}, {\n  id: 3,\n  message: \"Lab report ready for Charlie Brown\",\n  type: \"danger\"\n}, {\n  id: 4,\n  message: \"Reminder: Staff meeting at 3 PM\",\n  type: \"info\"\n}, {\n  id: 5,\n  message: \"Urgent: Update insurance forms\",\n  type: \"warning\"\n}, {\n  id: 6,\n  message: \"New patient: Eve Adams\",\n  type: \"info\"\n}, {\n  id: 7,\n  message: \"Appointment confirmed for Alice Smith\",\n  type: \"info\"\n}, {\n  id: 8,\n  message: \"Pending documents for Frank Wright\",\n  type: \"warning\"\n}, {\n  id: 9,\n  message: \"Lab results available for Grace Lee\",\n  type: \"danger\"\n}, {\n  id: 10,\n  message: \"Monthly report generated\",\n  type: \"info\"\n}];\nconst mockStats = {\n  checkedInToday: 6,\n  appointmentsToday: 10,\n  pendingAppointments: 4,\n  newRegistrations: 7\n};\nconst appointmentsByDoctor = [{\n  doctor: \"Dr. John Doe\",\n  appointments: 5\n}, {\n  doctor: \"Dr. Jane Smith\",\n  appointments: 3\n}, {\n  doctor: \"Dr. Emily White\",\n  appointments: 2\n}, {\n  doctor: \"Dr. Michael Lee\",\n  appointments: 4\n}];\nconst patientGenderDistribution = [{\n  gender: \"Male\",\n  count: 6\n}, {\n  gender: \"Female\",\n  count: 4\n}];\nconst COLORS = [\"#0088FE\", \"#FF8042\"];\n\n// ----- Dashboard Component -----\nconst ReceptionistDashboard = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n  const [stats, setStats] = useState({});\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    setPatients(mockPatients);\n    setTasks(mockTasks);\n    setNotifications(mockNotifications);\n    setStats(mockStats);\n  }, []);\n  const filteredPatients = patients.filter(p => p.name.toLowerCase().includes(searchTerm.toLowerCase()));\n\n  // const taskProgress =\n  //   tasks.length === 0 ? 0 : (tasks.filter((t) => t.completed).length / tasks.length) * 100;\n  const toggleTask = id => {\n    setTasks(prev => prev.map(t => t.id === id ? {\n      ...t,\n      completed: !t.completed\n    } : t));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Receptionist Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4 g-3\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-white bg-success shadow-sm border-0\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"d-flex align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(CheckCircleFill, {\n              size: 30,\n              className: \"me-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Checked-in Today\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"fs-4\",\n                children: stats.checkedInToday\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-white bg-primary shadow-sm border-0\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"d-flex align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(CalendarFill, {\n              size: 30,\n              className: \"me-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Appointments Today\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"fs-4\",\n                children: stats.appointmentsToday\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-white bg-warning shadow-sm border-0\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"d-flex align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(HourglassSplit, {\n              size: 30,\n              className: \"me-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Pending Appointments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"fs-4\",\n                children: stats.pendingAppointments\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-white bg-info shadow-sm border-0\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"d-flex align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(PersonPlus, {\n              size: 30,\n              className: \"me-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"New Registrations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"fs-4\",\n                children: stats.newRegistrations\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4 g-3\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: tasks.map(task => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                label: task.task,\n                checked: task.completed // ✅ shows checked if true\n                ,\n                onChange: () => toggleTask(task.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: [/*#__PURE__*/_jsxDEV(BellFill, {\n              className: \"me-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), \" Notifications\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: notifications.map(note => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(Badge, {\n                bg: note.type === \"info\" ? \"info\" : note.type === \"warning\" ? \"warning\" : \"danger\",\n                className: \"me-2\",\n                children: note.type.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this), note.message]\n            }, note.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4 g-3\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"Appointments per Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              width: 500,\n              height: 300,\n              data: appointmentsByDoctor,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"appointments\",\n                fill: \"#8884d8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"Patient Gender Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(PieChart, {\n              width: 400,\n              height: 300,\n              children: [/*#__PURE__*/_jsxDEV(Pie, {\n                data: patientGenderDistribution,\n                dataKey: \"count\",\n                nameKey: \"gender\",\n                cx: \"50%\",\n                cy: \"50%\",\n                outerRadius: 100,\n                label: true,\n                children: patientGenderDistribution.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: COLORS[index % COLORS.length]\n                }, `cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: [\"Patient List\", /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Search patient...\",\n              className: \"mt-2\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            responsive: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Age\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Gender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: filteredPatients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: patient.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: patient.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: patient.age\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: patient.gender\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 21\n                }, this)]\n              }, patient.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(ReceptionistDashboard, \"cCBqlW/u6NIN3kxES8YYK/sDr5s=\");\n_c = ReceptionistDashboard;\nexport default ReceptionistDashboard;\nvar _c;\n$RefreshReg$(_c, \"ReceptionistDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","ListGroup","Table","Badge","Form","ProgressBar","CheckCircleFill","BellFill","PersonPlus","CalendarFill","HourglassSplit","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","PieChart","Pie","Cell","jsxDEV","_jsxDEV","mockPatients","id","name","age","gender","mockTasks","task","completed","mockNotifications","message","type","mockStats","checkedInToday","appointmentsToday","pendingAppointments","newRegistrations","appointmentsByDoctor","doctor","appointments","patientGenderDistribution","count","COLORS","ReceptionistDashboard","_s","patients","setPatients","tasks","setTasks","notifications","setNotifications","stats","setStats","searchTerm","setSearchTerm","filteredPatients","filter","p","toLowerCase","includes","toggleTask","prev","map","t","fluid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","md","Body","size","Title","Text","Header","variant","Item","Check","label","checked","onChange","note","bg","toUpperCase","width","height","data","strokeDasharray","dataKey","fill","nameKey","cx","cy","outerRadius","entry","index","length","Control","placeholder","value","e","target","striped","bordered","hover","responsive","patient","_c","$RefreshReg$"],"sources":["C:/Users/rauna/OneDrive/Desktop/v1.0/staff-portal/src/pages/Receptionist/ReceptionistDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Card, ListGroup, Table, Badge, Form, ProgressBar } from \"react-bootstrap\";\nimport {\n  CheckCircleFill,\n  BellFill,\n  PersonPlus,\n  CalendarFill,\n  HourglassSplit\n} from \"react-bootstrap-icons\";\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  PieChart, Pie, Cell\n} from \"recharts\";\n\n// ----- Mock Data -----\nconst mockPatients = [\n  { id: 1, name: \"Alice Smith\", age: 30, gender: \"Female\" },\n  { id: 2, name: \"Bob Johnson\", age: 45, gender: \"Male\" },\n  { id: 3, name: \"Charlie Brown\", age: 28, gender: \"Male\" },\n  { id: 4, name: \"Diana Prince\", age: 35, gender: \"Female\" },\n  { id: 5, name: \"Eve Adams\", age: 22, gender: \"Female\" },\n  { id: 6, name: \"Frank Wright\", age: 50, gender: \"Male\" },\n  { id: 7, name: \"Grace Lee\", age: 40, gender: \"Female\" },\n  { id: 8, name: \"Henry Ford\", age: 33, gender: \"Male\" },\n  { id: 9, name: \"Ivy Baker\", age: 29, gender: \"Female\" },\n  { id: 10, name: \"Jack Black\", age: 38, gender: \"Male\" },\n];\n\nconst mockTasks = [\n  { id: 1, task: \"Call Alice Smith for appointment confirmation\", completed: true },\n  { id: 2, task: \"Prepare new patient forms\", completed: true },\n  { id: 3, task: \"Follow up with Dr. John Doe\", completed: false },\n  { id: 4, task: \"Check lab results for Charlie Brown\", completed: true },\n  { id: 5, task: \"Update insurance info for Diana Prince\", completed: false },\n  { id: 6, task: \"Schedule appointment for Eve Adams\", completed: true },\n  { id: 7, task: \"Verify documents for Frank Wright\", completed: false },\n  { id: 8, task: \"Prepare monthly report\", completed: false },\n  { id: 9, task: \"Confirm new registrations\", completed: true },\n  { id: 10, task: \"Review patient feedback\", completed: false },\n];\n\nconst mockNotifications = [\n  { id: 1, message: \"Appointment canceled by Bob Johnson\", type: \"warning\" },\n  { id: 2, message: \"New patient registered: Diana Prince\", type: \"info\" },\n  { id: 3, message: \"Lab report ready for Charlie Brown\", type: \"danger\" },\n  { id: 4, message: \"Reminder: Staff meeting at 3 PM\", type: \"info\" },\n  { id: 5, message: \"Urgent: Update insurance forms\", type: \"warning\" },\n  { id: 6, message: \"New patient: Eve Adams\", type: \"info\" },\n  { id: 7, message: \"Appointment confirmed for Alice Smith\", type: \"info\" },\n  { id: 8, message: \"Pending documents for Frank Wright\", type: \"warning\" },\n  { id: 9, message: \"Lab results available for Grace Lee\", type: \"danger\" },\n  { id: 10, message: \"Monthly report generated\", type: \"info\" },\n];\n\nconst mockStats = {\n  checkedInToday: 6,\n  appointmentsToday: 10,\n  pendingAppointments: 4,\n  newRegistrations: 7,\n};\n\nconst appointmentsByDoctor = [\n  { doctor: \"Dr. John Doe\", appointments: 5 },\n  { doctor: \"Dr. Jane Smith\", appointments: 3 },\n  { doctor: \"Dr. Emily White\", appointments: 2 },\n  { doctor: \"Dr. Michael Lee\", appointments: 4 },\n];\n\nconst patientGenderDistribution = [\n  { gender: \"Male\", count: 6 },\n  { gender: \"Female\", count: 4 },\n];\n\nconst COLORS = [\"#0088FE\", \"#FF8042\"];\n\n// ----- Dashboard Component -----\nconst ReceptionistDashboard = () => {\n  const [patients, setPatients] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n  const [stats, setStats] = useState({});\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    setPatients(mockPatients);\n    setTasks(mockTasks);\n    setNotifications(mockNotifications);\n    setStats(mockStats);\n  }, []);\n\n  const filteredPatients = patients.filter((p) =>\n    p.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  // const taskProgress =\n  //   tasks.length === 0 ? 0 : (tasks.filter((t) => t.completed).length / tasks.length) * 100;\n  const toggleTask = (id) => {\n    setTasks((prev) =>\n      prev.map((t) => (t.id === id ? { ...t, completed: !t.completed } : t))\n    );\n  };\n\n  return (\n    <Container fluid className=\"mt-4\">\n      <h1 className=\"mb-4\">Receptionist Dashboard</h1>\n\n      {/* Stats Cards */}\n      <Row className=\"mb-4 g-3\">\n        <Col md={3}>\n          <Card className=\"text-white bg-success shadow-sm border-0\">\n            <Card.Body className=\"d-flex align-items-center\">\n              <CheckCircleFill size={30} className=\"me-3\" />\n              <div>\n                <Card.Title>Checked-in Today</Card.Title>\n                <Card.Text className=\"fs-4\">{stats.checkedInToday}</Card.Text>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={3}>\n          <Card className=\"text-white bg-primary shadow-sm border-0\">\n            <Card.Body className=\"d-flex align-items-center\">\n              <CalendarFill size={30} className=\"me-3\" />\n              <div>\n                <Card.Title>Appointments Today</Card.Title>\n                <Card.Text className=\"fs-4\">{stats.appointmentsToday}</Card.Text>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={3}>\n          <Card className=\"text-white bg-warning shadow-sm border-0\">\n            <Card.Body className=\"d-flex align-items-center\">\n              <HourglassSplit size={30} className=\"me-3\" />\n              <div>\n                <Card.Title>Pending Appointments</Card.Title>\n                <Card.Text className=\"fs-4\">{stats.pendingAppointments}</Card.Text>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={3}>\n          <Card className=\"text-white bg-info shadow-sm border-0\">\n            <Card.Body className=\"d-flex align-items-center\">\n              <PersonPlus size={30} className=\"me-3\" />\n              <div>\n                <Card.Title>New Registrations</Card.Title>\n                <Card.Text className=\"fs-4\">{stats.newRegistrations}</Card.Text>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      {/* Tasks & Notifications */}\n      <Row className=\"mb-4 g-3\">\n       <Col md={6}>\n          <Card className=\"shadow-sm\">\n            <Card.Header>Tasks</Card.Header>\n            <ListGroup variant=\"flush\">\n              {tasks.map((task) => (\n                <ListGroup.Item key={task.id}>\n                  <Form.Check\n                    type=\"checkbox\"\n                    label={task.task}\n                    checked={task.completed} // ✅ shows checked if true\n                    onChange={() => toggleTask(task.id)}\n                  />\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Card>\n        </Col>\n\n        <Col md={6}>\n          <Card className=\"shadow-sm\">\n            <Card.Header>\n              <BellFill className=\"me-2\" /> Notifications\n            </Card.Header>\n            <ListGroup variant=\"flush\">\n              {notifications.map((note) => (\n                <ListGroup.Item key={note.id}>\n                  <Badge\n                    bg={\n                      note.type === \"info\"\n                        ? \"info\"\n                        : note.type === \"warning\"\n                        ? \"warning\"\n                        : \"danger\"\n                    }\n                    className=\"me-2\"\n                  >\n                    {note.type.toUpperCase()}\n                  </Badge>\n                  {note.message}\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n\n      {/* Charts */}\n      <Row className=\"mb-4 g-3\">\n        <Col md={6}>\n          <Card className=\"shadow-sm\">\n            <Card.Header>Appointments per Doctor</Card.Header>\n            <Card.Body>\n              <BarChart width={500} height={300} data={appointmentsByDoctor}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"doctor\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"appointments\" fill=\"#8884d8\" />\n              </BarChart>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col md={6}>\n          <Card className=\"shadow-sm\">\n            <Card.Header>Patient Gender Distribution</Card.Header>\n            <Card.Body>\n              <PieChart width={400} height={300}>\n                <Pie\n                  data={patientGenderDistribution}\n                  dataKey=\"count\"\n                  nameKey=\"gender\"\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  outerRadius={100}\n                  label\n                >\n                  {patientGenderDistribution.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip />\n              </PieChart>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      {/* Patient List */}\n      <Row className=\"mb-4\">\n        <Col>\n          <Card className=\"shadow-sm\">\n            <Card.Header>\n              Patient List\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Search patient...\"\n                className=\"mt-2\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </Card.Header>\n            <Table striped bordered hover responsive>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                  <th>Age</th>\n                  <th>Gender</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filteredPatients.map((patient) => (\n                  <tr key={patient.id}>\n                    <td>{patient.id}</td>\n                    <td>{patient.name}</td>\n                    <td>{patient.age}</td>\n                    <td>{patient.gender}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ReceptionistDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}