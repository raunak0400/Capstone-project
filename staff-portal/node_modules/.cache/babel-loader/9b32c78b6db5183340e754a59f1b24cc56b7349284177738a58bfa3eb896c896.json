{"ast":null,"code":"import _objectSpread from\"C:/Users/rauna/OneDrive/Desktop/v1.0/staff-portal/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from\"react\";import{Container,Row,Col,Card,ListGroup,Table,Badge,Form,ProgressBar}from\"react-bootstrap\";import{CheckCircleFill,BellFill,PersonPlus,CalendarFill,HourglassSplit}from\"react-bootstrap-icons\";import{BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend,PieChart,Pie,Cell}from\"recharts\";// ----- Mock Data -----\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const mockPatients=[{id:1,name:\"Alice Smith\",age:30,gender:\"Female\"},{id:2,name:\"Bob Johnson\",age:45,gender:\"Male\"},{id:3,name:\"Charlie Brown\",age:28,gender:\"Male\"},{id:4,name:\"Diana Prince\",age:35,gender:\"Female\"},{id:5,name:\"Eve Adams\",age:22,gender:\"Female\"},{id:6,name:\"Frank Wright\",age:50,gender:\"Male\"},{id:7,name:\"Grace Lee\",age:40,gender:\"Female\"},{id:8,name:\"Henry Ford\",age:33,gender:\"Male\"},{id:9,name:\"Ivy Baker\",age:29,gender:\"Female\"},{id:10,name:\"Jack Black\",age:38,gender:\"Male\"}];const mockTasks=[{id:1,task:\"Call Alice Smith for appointment confirmation\",completed:true},{id:2,task:\"Prepare new patient forms\",completed:true},{id:3,task:\"Follow up with Dr. John Doe\",completed:false},{id:4,task:\"Check lab results for Charlie Brown\",completed:true},{id:5,task:\"Update insurance info for Diana Prince\",completed:false},{id:6,task:\"Schedule appointment for Eve Adams\",completed:true},{id:7,task:\"Verify documents for Frank Wright\",completed:false},{id:8,task:\"Prepare monthly report\",completed:false},{id:9,task:\"Confirm new registrations\",completed:true},{id:10,task:\"Review patient feedback\",completed:false}];const mockNotifications=[{id:1,message:\"Appointment canceled by Bob Johnson\",type:\"warning\"},{id:2,message:\"New patient registered: Diana Prince\",type:\"info\"},{id:3,message:\"Lab report ready for Charlie Brown\",type:\"danger\"},{id:4,message:\"Reminder: Staff meeting at 3 PM\",type:\"info\"},{id:5,message:\"Urgent: Update insurance forms\",type:\"warning\"},{id:6,message:\"New patient: Eve Adams\",type:\"info\"},{id:7,message:\"Appointment confirmed for Alice Smith\",type:\"info\"},{id:8,message:\"Pending documents for Frank Wright\",type:\"warning\"},{id:9,message:\"Lab results available for Grace Lee\",type:\"danger\"},{id:10,message:\"Monthly report generated\",type:\"info\"}];const mockStats={checkedInToday:6,appointmentsToday:10,pendingAppointments:4,newRegistrations:7};const appointmentsByDoctor=[{doctor:\"Dr. John Doe\",appointments:5},{doctor:\"Dr. Jane Smith\",appointments:3},{doctor:\"Dr. Emily White\",appointments:2},{doctor:\"Dr. Michael Lee\",appointments:4}];const patientGenderDistribution=[{gender:\"Male\",count:6},{gender:\"Female\",count:4}];const COLORS=[\"#0088FE\",\"#FF8042\"];// ----- Dashboard Component -----\nconst ReceptionistDashboard=()=>{const[patients,setPatients]=useState([]);const[tasks,setTasks]=useState([]);const[notifications,setNotifications]=useState([]);const[stats,setStats]=useState({});const[searchTerm,setSearchTerm]=useState(\"\");useEffect(()=>{setPatients(mockPatients);setTasks(mockTasks);setNotifications(mockNotifications);setStats(mockStats);},[]);const filteredPatients=patients.filter(p=>p.name.toLowerCase().includes(searchTerm.toLowerCase()));// const taskProgress =\n//   tasks.length === 0 ? 0 : (tasks.filter((t) => t.completed).length / tasks.length) * 100;\nconst toggleTask=id=>{setTasks(prev=>prev.map(t=>t.id===id?_objectSpread(_objectSpread({},t),{},{completed:!t.completed}):t));};return/*#__PURE__*/_jsxs(Container,{fluid:true,className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"mb-4\",children:\"Receptionist Dashboard\"}),/*#__PURE__*/_jsxs(Row,{className:\"mb-4 g-3\",children:[/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"text-white bg-success shadow-sm border-0\",children:/*#__PURE__*/_jsxs(Card.Body,{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(CheckCircleFill,{size:30,className:\"me-3\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Checked-in Today\"}),/*#__PURE__*/_jsx(Card.Text,{className:\"fs-4\",children:stats.checkedInToday})]})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"text-white bg-primary shadow-sm border-0\",children:/*#__PURE__*/_jsxs(Card.Body,{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(CalendarFill,{size:30,className:\"me-3\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Appointments Today\"}),/*#__PURE__*/_jsx(Card.Text,{className:\"fs-4\",children:stats.appointmentsToday})]})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"text-white bg-warning shadow-sm border-0\",children:/*#__PURE__*/_jsxs(Card.Body,{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(HourglassSplit,{size:30,className:\"me-3\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Pending Appointments\"}),/*#__PURE__*/_jsx(Card.Text,{className:\"fs-4\",children:stats.pendingAppointments})]})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"text-white bg-info shadow-sm border-0\",children:/*#__PURE__*/_jsxs(Card.Body,{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(PersonPlus,{size:30,className:\"me-3\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"New Registrations\"}),/*#__PURE__*/_jsx(Card.Text,{className:\"fs-4\",children:stats.newRegistrations})]})]})})})]}),/*#__PURE__*/_jsxs(Row,{className:\"mb-4 g-3\",children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Card,{className:\"shadow-sm\",children:[/*#__PURE__*/_jsx(Card.Header,{children:\"Tasks\"}),/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:tasks.map(task=>/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",label:task.task,checked:task.completed// âœ… shows checked if true\n,onChange:()=>toggleTask(task.id)})},task.id))})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Card,{className:\"shadow-sm\",children:[/*#__PURE__*/_jsxs(Card.Header,{children:[/*#__PURE__*/_jsx(BellFill,{className:\"me-2\"}),\" Notifications\"]}),/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:notifications.map(note=>/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsx(Badge,{bg:note.type===\"info\"?\"info\":note.type===\"warning\"?\"warning\":\"danger\",className:\"me-2\",children:note.type.toUpperCase()}),note.message]},note.id))})]})})]}),/*#__PURE__*/_jsxs(Row,{className:\"mb-4 g-3\",children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Card,{className:\"shadow-sm\",children:[/*#__PURE__*/_jsx(Card.Header,{children:\"Appointments per Doctor\"}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(BarChart,{width:500,height:300,data:appointmentsByDoctor,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"doctor\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"appointments\",fill:\"#8884d8\"})]})})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Card,{className:\"shadow-sm\",children:[/*#__PURE__*/_jsx(Card.Header,{children:\"Patient Gender Distribution\"}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(PieChart,{width:400,height:300,children:[/*#__PURE__*/_jsx(Pie,{data:patientGenderDistribution,dataKey:\"count\",nameKey:\"gender\",cx:\"50%\",cy:\"50%\",outerRadius:100,label:true,children:patientGenderDistribution.map((entry,index)=>/*#__PURE__*/_jsx(Cell,{fill:COLORS[index%COLORS.length]},\"cell-\".concat(index)))}),/*#__PURE__*/_jsx(Tooltip,{})]})})]})})]}),/*#__PURE__*/_jsx(Row,{className:\"mb-4\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Card,{className:\"shadow-sm\",children:[/*#__PURE__*/_jsxs(Card.Header,{children:[\"Patient List\",/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Search patient...\",className:\"mt-2\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value)})]}),/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,hover:true,responsive:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"#\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Age\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Gender\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredPatients.map(patient=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:patient.id}),/*#__PURE__*/_jsx(\"td\",{children:patient.name}),/*#__PURE__*/_jsx(\"td\",{children:patient.age}),/*#__PURE__*/_jsx(\"td\",{children:patient.gender})]},patient.id))})]})]})})})]});};export default ReceptionistDashboard;","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","ListGroup","Table","Badge","Form","ProgressBar","CheckCircleFill","BellFill","PersonPlus","CalendarFill","HourglassSplit","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","PieChart","Pie","Cell","jsx","_jsx","jsxs","_jsxs","mockPatients","id","name","age","gender","mockTasks","task","completed","mockNotifications","message","type","mockStats","checkedInToday","appointmentsToday","pendingAppointments","newRegistrations","appointmentsByDoctor","doctor","appointments","patientGenderDistribution","count","COLORS","ReceptionistDashboard","patients","setPatients","tasks","setTasks","notifications","setNotifications","stats","setStats","searchTerm","setSearchTerm","filteredPatients","filter","p","toLowerCase","includes","toggleTask","prev","map","t","_objectSpread","fluid","className","children","md","Body","size","Title","Text","Header","variant","Item","Check","label","checked","onChange","note","bg","toUpperCase","width","height","data","strokeDasharray","dataKey","fill","nameKey","cx","cy","outerRadius","entry","index","length","concat","Control","placeholder","value","e","target","striped","bordered","hover","responsive","patient"],"sources":["C:/Users/rauna/OneDrive/Desktop/v1.0/staff-portal/src/pages/Receptionist/ReceptionistDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Card, ListGroup, Table, Badge, Form, ProgressBar } from \"react-bootstrap\";\nimport {\n  CheckCircleFill,\n  BellFill,\n  PersonPlus,\n  CalendarFill,\n  HourglassSplit\n} from \"react-bootstrap-icons\";\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  PieChart, Pie, Cell\n} from \"recharts\";\n\n// ----- Mock Data -----\nconst mockPatients = [\n  { id: 1, name: \"Alice Smith\", age: 30, gender: \"Female\" },\n  { id: 2, name: \"Bob Johnson\", age: 45, gender: \"Male\" },\n  { id: 3, name: \"Charlie Brown\", age: 28, gender: \"Male\" },\n  { id: 4, name: \"Diana Prince\", age: 35, gender: \"Female\" },\n  { id: 5, name: \"Eve Adams\", age: 22, gender: \"Female\" },\n  { id: 6, name: \"Frank Wright\", age: 50, gender: \"Male\" },\n  { id: 7, name: \"Grace Lee\", age: 40, gender: \"Female\" },\n  { id: 8, name: \"Henry Ford\", age: 33, gender: \"Male\" },\n  { id: 9, name: \"Ivy Baker\", age: 29, gender: \"Female\" },\n  { id: 10, name: \"Jack Black\", age: 38, gender: \"Male\" },\n];\n\nconst mockTasks = [\n  { id: 1, task: \"Call Alice Smith for appointment confirmation\", completed: true },\n  { id: 2, task: \"Prepare new patient forms\", completed: true },\n  { id: 3, task: \"Follow up with Dr. John Doe\", completed: false },\n  { id: 4, task: \"Check lab results for Charlie Brown\", completed: true },\n  { id: 5, task: \"Update insurance info for Diana Prince\", completed: false },\n  { id: 6, task: \"Schedule appointment for Eve Adams\", completed: true },\n  { id: 7, task: \"Verify documents for Frank Wright\", completed: false },\n  { id: 8, task: \"Prepare monthly report\", completed: false },\n  { id: 9, task: \"Confirm new registrations\", completed: true },\n  { id: 10, task: \"Review patient feedback\", completed: false },\n];\n\nconst mockNotifications = [\n  { id: 1, message: \"Appointment canceled by Bob Johnson\", type: \"warning\" },\n  { id: 2, message: \"New patient registered: Diana Prince\", type: \"info\" },\n  { id: 3, message: \"Lab report ready for Charlie Brown\", type: \"danger\" },\n  { id: 4, message: \"Reminder: Staff meeting at 3 PM\", type: \"info\" },\n  { id: 5, message: \"Urgent: Update insurance forms\", type: \"warning\" },\n  { id: 6, message: \"New patient: Eve Adams\", type: \"info\" },\n  { id: 7, message: \"Appointment confirmed for Alice Smith\", type: \"info\" },\n  { id: 8, message: \"Pending documents for Frank Wright\", type: \"warning\" },\n  { id: 9, message: \"Lab results available for Grace Lee\", type: \"danger\" },\n  { id: 10, message: \"Monthly report generated\", type: \"info\" },\n];\n\nconst mockStats = {\n  checkedInToday: 6,\n  appointmentsToday: 10,\n  pendingAppointments: 4,\n  newRegistrations: 7,\n};\n\nconst appointmentsByDoctor = [\n  { doctor: \"Dr. John Doe\", appointments: 5 },\n  { doctor: \"Dr. Jane Smith\", appointments: 3 },\n  { doctor: \"Dr. Emily White\", appointments: 2 },\n  { doctor: \"Dr. Michael Lee\", appointments: 4 },\n];\n\nconst patientGenderDistribution = [\n  { gender: \"Male\", count: 6 },\n  { gender: \"Female\", count: 4 },\n];\n\nconst COLORS = [\"#0088FE\", \"#FF8042\"];\n\n// ----- Dashboard Component -----\nconst ReceptionistDashboard = () => {\n  const [patients, setPatients] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n  const [stats, setStats] = useState({});\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    setPatients(mockPatients);\n    setTasks(mockTasks);\n    setNotifications(mockNotifications);\n    setStats(mockStats);\n  }, []);\n\n  const filteredPatients = patients.filter((p) =>\n    p.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  // const taskProgress =\n  //   tasks.length === 0 ? 0 : (tasks.filter((t) => t.completed).length / tasks.length) * 100;\n  const toggleTask = (id) => {\n    setTasks((prev) =>\n      prev.map((t) => (t.id === id ? { ...t, completed: !t.completed } : t))\n    );\n  };\n\n  return (\n    <Container fluid className=\"mt-4\">\n      <h1 className=\"mb-4\">Receptionist Dashboard</h1>\n\n      {/* Stats Cards */}\n      <Row className=\"mb-4 g-3\">\n        <Col md={3}>\n          <Card className=\"text-white bg-success shadow-sm border-0\">\n            <Card.Body className=\"d-flex align-items-center\">\n              <CheckCircleFill size={30} className=\"me-3\" />\n              <div>\n                <Card.Title>Checked-in Today</Card.Title>\n                <Card.Text className=\"fs-4\">{stats.checkedInToday}</Card.Text>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={3}>\n          <Card className=\"text-white bg-primary shadow-sm border-0\">\n            <Card.Body className=\"d-flex align-items-center\">\n              <CalendarFill size={30} className=\"me-3\" />\n              <div>\n                <Card.Title>Appointments Today</Card.Title>\n                <Card.Text className=\"fs-4\">{stats.appointmentsToday}</Card.Text>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={3}>\n          <Card className=\"text-white bg-warning shadow-sm border-0\">\n            <Card.Body className=\"d-flex align-items-center\">\n              <HourglassSplit size={30} className=\"me-3\" />\n              <div>\n                <Card.Title>Pending Appointments</Card.Title>\n                <Card.Text className=\"fs-4\">{stats.pendingAppointments}</Card.Text>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={3}>\n          <Card className=\"text-white bg-info shadow-sm border-0\">\n            <Card.Body className=\"d-flex align-items-center\">\n              <PersonPlus size={30} className=\"me-3\" />\n              <div>\n                <Card.Title>New Registrations</Card.Title>\n                <Card.Text className=\"fs-4\">{stats.newRegistrations}</Card.Text>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      {/* Tasks & Notifications */}\n      <Row className=\"mb-4 g-3\">\n       <Col md={6}>\n          <Card className=\"shadow-sm\">\n            <Card.Header>Tasks</Card.Header>\n            <ListGroup variant=\"flush\">\n              {tasks.map((task) => (\n                <ListGroup.Item key={task.id}>\n                  <Form.Check\n                    type=\"checkbox\"\n                    label={task.task}\n                    checked={task.completed} // âœ… shows checked if true\n                    onChange={() => toggleTask(task.id)}\n                  />\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Card>\n        </Col>\n\n        <Col md={6}>\n          <Card className=\"shadow-sm\">\n            <Card.Header>\n              <BellFill className=\"me-2\" /> Notifications\n            </Card.Header>\n            <ListGroup variant=\"flush\">\n              {notifications.map((note) => (\n                <ListGroup.Item key={note.id}>\n                  <Badge\n                    bg={\n                      note.type === \"info\"\n                        ? \"info\"\n                        : note.type === \"warning\"\n                        ? \"warning\"\n                        : \"danger\"\n                    }\n                    className=\"me-2\"\n                  >\n                    {note.type.toUpperCase()}\n                  </Badge>\n                  {note.message}\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n\n      {/* Charts */}\n      <Row className=\"mb-4 g-3\">\n        <Col md={6}>\n          <Card className=\"shadow-sm\">\n            <Card.Header>Appointments per Doctor</Card.Header>\n            <Card.Body>\n              <BarChart width={500} height={300} data={appointmentsByDoctor}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"doctor\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"appointments\" fill=\"#8884d8\" />\n              </BarChart>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col md={6}>\n          <Card className=\"shadow-sm\">\n            <Card.Header>Patient Gender Distribution</Card.Header>\n            <Card.Body>\n              <PieChart width={400} height={300}>\n                <Pie\n                  data={patientGenderDistribution}\n                  dataKey=\"count\"\n                  nameKey=\"gender\"\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  outerRadius={100}\n                  label\n                >\n                  {patientGenderDistribution.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip />\n              </PieChart>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      {/* Patient List */}\n      <Row className=\"mb-4\">\n        <Col>\n          <Card className=\"shadow-sm\">\n            <Card.Header>\n              Patient List\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Search patient...\"\n                className=\"mt-2\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </Card.Header>\n            <Table striped bordered hover responsive>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                  <th>Age</th>\n                  <th>Gender</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filteredPatients.map((patient) => (\n                  <tr key={patient.id}>\n                    <td>{patient.id}</td>\n                    <td>{patient.name}</td>\n                    <td>{patient.age}</td>\n                    <td>{patient.gender}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ReceptionistDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}