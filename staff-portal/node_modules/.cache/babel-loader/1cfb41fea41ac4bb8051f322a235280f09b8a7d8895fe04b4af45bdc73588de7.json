{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{Container,Row,Col,Card,ListGroup,Badge}from\"react-bootstrap\";// ----------------- Mock Data -----------------\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const mockDoctor={id:\"123\",name:\"John Doe\",specialization:\"Cardiology\",email:\"john.doe@example.com\"};const mockAppointments=[{id:1,patientName:\"Alice Smith\",time:\"09:00 AM\",status:\"Confirmed\"},{id:2,patientName:\"Bob Johnson\",time:\"10:30 AM\",status:\"Pending\"},{id:3,patientName:\"Charlie Brown\",time:\"01:00 PM\",status:\"Completed\"},{id:1,patientName:\"Alice Smith\",time:\"09:00 AM\",status:\"Confirmed\"},{id:2,patientName:\"Bob Johnson\",time:\"10:30 AM\",status:\"Pending\"},{id:3,patientName:\"Charlie Brown\",time:\"01:00 PM\",status:\"Completed\"}];const mockStats={appointments:3,patients:25,pendingReports:2};const mockPatients=[{id:\"p1\",firstName:\"Alice\",lastName:\"Smith\",dateOfBirth:\"1990-05-12\",gender:\"female\",phone:\"1234567890\",email:\"alice@example.com\",address:\"123 Street, City\",bloodType:\"A+\",emergencyContact:{name:\"Bob Smith\",relationship:\"Spouse\",phone:\"0987654321\"},medicalHistory:[\"Diabetes\",\"Hypertension\"],allergies:[\"Penicillin\",\"Peanuts\"],medications:[\"Metformin\",\"Aspirin\"],insurance:{provider:\"HealthCare Inc.\",policyNumber:\"HC12345\",groupNumber:\"G123\"},status:\"active\"},{id:\"p2\",firstName:\"John\",lastName:\"Doe\",dateOfBirth:\"1985-08-20\",gender:\"male\",phone:\"9876543210\",email:\"john@example.com\",address:\"456 Avenue, City\",bloodType:\"B+\",emergencyContact:{name:\"Jane Doe\",relationship:\"Spouse\",phone:\"1234567890\"},medicalHistory:[\"Asthma\"],allergies:[\"None\"],medications:[\"Albuterol\"],insurance:{provider:\"HealthFirst\",policyNumber:\"HF67890\",groupNumber:\"G678\"},status:\"active\"}];const mockNotifications=[{id:1,message:\"New lab report submitted for Alice Smith.\",type:\"info\"},{id:2,message:\"Appointment canceled by Bob Johnson.\",type:\"warning\"}];// ----------------- Dashboard Component -----------------\nconst DoctorDashboard=()=>{const[doctor,setDoctor]=useState(null);const[appointments,setAppointments]=useState([]);const[stats,setStats]=useState({});const[notifications,setNotifications]=useState([]);useEffect(()=>{// Simulate API call\nconst fetchData=async()=>{setDoctor(mockDoctor);setAppointments(mockAppointments);setStats(mockStats);setNotifications(mockNotifications);};fetchData();},[]);// Function to get badge color based on status/type\nconst getBadgeColor=status=>{switch(status){case\"Confirmed\":case\"info\":return\"primary\";case\"Pending\":case\"warning\":return\"warning\";case\"Completed\":return\"success\";default:return\"secondary\";}};return/*#__PURE__*/_jsxs(Container,{fluid:true,className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"mb-4\",children:\"Appointment List\"}),/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:\"Today's Appointments\"}),/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:appointments.length>0?appointments.map(appt=>/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Patient:\"}),\" \",appt.patientName,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Time: \",appt.time]})]}),/*#__PURE__*/_jsx(Badge,{bg:getBadgeColor(appt.status),children:appt.status})]},appt.id)):/*#__PURE__*/_jsx(ListGroup.Item,{children:\"No appointments today\"})})]})]});};export default DoctorDashboard;","map":{"version":3,"names":["React","useEffect","useState","Container","Row","Col","Card","ListGroup","Badge","jsx","_jsx","jsxs","_jsxs","mockDoctor","id","name","specialization","email","mockAppointments","patientName","time","status","mockStats","appointments","patients","pendingReports","mockPatients","firstName","lastName","dateOfBirth","gender","phone","address","bloodType","emergencyContact","relationship","medicalHistory","allergies","medications","insurance","provider","policyNumber","groupNumber","mockNotifications","message","type","DoctorDashboard","doctor","setDoctor","setAppointments","stats","setStats","notifications","setNotifications","fetchData","getBadgeColor","fluid","className","children","Header","variant","length","map","appt","Item","bg"],"sources":["C:/Users/rauna/OneDrive/Desktop/v1.0/staff-portal/src/pages/DoctorMain/Appointments.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Card, ListGroup, Badge } from \"react-bootstrap\";\n\n// ----------------- Mock Data -----------------\nconst mockDoctor = {\n    id: \"123\",\n    name: \"John Doe\",\n    specialization: \"Cardiology\",\n    email: \"john.doe@example.com\",\n};\n\nconst mockAppointments = [\n    { id: 1, patientName: \"Alice Smith\", time: \"09:00 AM\", status: \"Confirmed\" },\n    { id: 2, patientName: \"Bob Johnson\", time: \"10:30 AM\", status: \"Pending\" },\n    { id: 3, patientName: \"Charlie Brown\", time: \"01:00 PM\", status: \"Completed\" },\n    { id: 1, patientName: \"Alice Smith\", time: \"09:00 AM\", status: \"Confirmed\" },\n    { id: 2, patientName: \"Bob Johnson\", time: \"10:30 AM\", status: \"Pending\" },\n    { id: 3, patientName: \"Charlie Brown\", time: \"01:00 PM\", status: \"Completed\" },\n];\n\nconst mockStats = {\n    appointments: 3,\n    patients: 25,\n    pendingReports: 2,\n};\nconst mockPatients = [\n    {\n        id: \"p1\",\n        firstName: \"Alice\",\n        lastName: \"Smith\",\n        dateOfBirth: \"1990-05-12\",\n        gender: \"female\",\n        phone: \"1234567890\",\n        email: \"alice@example.com\",\n        address: \"123 Street, City\",\n        bloodType: \"A+\",\n        emergencyContact: {\n            name: \"Bob Smith\",\n            relationship: \"Spouse\",\n            phone: \"0987654321\"\n        },\n        medicalHistory: [\"Diabetes\", \"Hypertension\"],\n        allergies: [\"Penicillin\", \"Peanuts\"],\n        medications: [\"Metformin\", \"Aspirin\"],\n        insurance: {\n            provider: \"HealthCare Inc.\",\n            policyNumber: \"HC12345\",\n            groupNumber: \"G123\"\n        },\n        status: \"active\"\n    },\n    {\n        id: \"p2\",\n        firstName: \"John\",\n        lastName: \"Doe\",\n        dateOfBirth: \"1985-08-20\",\n        gender: \"male\",\n        phone: \"9876543210\",\n        email: \"john@example.com\",\n        address: \"456 Avenue, City\",\n        bloodType: \"B+\",\n        emergencyContact: {\n            name: \"Jane Doe\",\n            relationship: \"Spouse\",\n            phone: \"1234567890\"\n        },\n        medicalHistory: [\"Asthma\"],\n        allergies: [\"None\"],\n        medications: [\"Albuterol\"],\n        insurance: {\n            provider: \"HealthFirst\",\n            policyNumber: \"HF67890\",\n            groupNumber: \"G678\"\n        },\n        status: \"active\"\n    }\n];\n\n\nconst mockNotifications = [\n    { id: 1, message: \"New lab report submitted for Alice Smith.\", type: \"info\" },\n    { id: 2, message: \"Appointment canceled by Bob Johnson.\", type: \"warning\" },\n];\n\n// ----------------- Dashboard Component -----------------\nconst DoctorDashboard = () => {\n    const [doctor, setDoctor] = useState(null);\n    const [appointments, setAppointments] = useState([]);\n    const [stats, setStats] = useState({});\n    const [notifications, setNotifications] = useState([]);\n\n    useEffect(() => {\n        // Simulate API call\n        const fetchData = async () => {\n            setDoctor(mockDoctor);\n            setAppointments(mockAppointments);\n            setStats(mockStats);\n            setNotifications(mockNotifications);\n        };\n        fetchData();\n    }, []);\n\n    // Function to get badge color based on status/type\n    const getBadgeColor = (status) => {\n        switch (status) {\n            case \"Confirmed\":\n            case \"info\":\n                return \"primary\";\n            case \"Pending\":\n            case \"warning\":\n                return \"warning\";\n            case \"Completed\":\n                return \"success\";\n            default:\n                return \"secondary\";\n        }\n    };\n\n    return (\n        <Container fluid className=\"mt-4\">\n            <h1 className=\"mb-4\">Appointment List</h1>\n\n            {/* Appointments List */}\n            <Card className=\"mb-4\">\n                <Card.Header>Today's Appointments</Card.Header>\n                <ListGroup variant=\"flush\">\n                    {appointments.length > 0 ? (\n                        appointments.map((appt) => (\n                            <ListGroup.Item key={appt.id} className=\"d-flex justify-content-between align-items-center\">\n                                <div>\n                                    <strong>Patient:</strong> {appt.patientName} <br />\n                                    <small>Time: {appt.time}</small>\n                                </div>\n                                <Badge bg={getBadgeColor(appt.status)}>{appt.status}</Badge>\n                            </ListGroup.Item>\n                        ))\n                    ) : (\n                        <ListGroup.Item>No appointments today</ListGroup.Item>\n                    )}\n                </ListGroup>\n            </Card>\n\n            \n\n\n\n        </Container>\n    );\n};\n\nexport default DoctorDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}