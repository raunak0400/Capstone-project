{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rauna\\\\OneDrive\\\\Desktop\\\\v1.0\\\\staff-portal\\\\src\\\\pages\\\\NurseMain\\\\PaitientCare.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Card, ListGroup, ProgressBar, Button, Modal, Form } from \"react-bootstrap\";\n\n// Mock Patients Data (10 patients)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockPatients = [{\n  id: 1,\n  name: \"Rahul Sharma\",\n  vitals: {\n    bp: \"120/80 mmHg\",\n    hr: 78,\n    spo2: 97,\n    temp: \"98.6°F\"\n  },\n  medications: [{\n    id: 1,\n    name: \"Paracetamol\",\n    time: \"08:00 AM\",\n    status: \"Given\"\n  }, {\n    id: 2,\n    name: \"Antibiotic\",\n    time: \"02:00 PM\",\n    status: \"Pending\"\n  }],\n  notes: [\"Patient complained of mild headache.\"],\n  painLevel: 4,\n  upcomingTasks: [{\n    id: 1,\n    task: \"Dressing change\",\n    time: \"02:00 PM\"\n  }, {\n    id: 2,\n    task: \"Physiotherapy session\",\n    time: \"04:30 PM\"\n  }]\n}, {\n  id: 2,\n  name: \"Anita Desai\",\n  vitals: {\n    bp: \"110/70 mmHg\",\n    hr: 85,\n    spo2: 95,\n    temp: \"99.1°F\"\n  },\n  medications: [{\n    id: 1,\n    name: \"Insulin\",\n    time: \"09:00 AM\",\n    status: \"Given\"\n  }, {\n    id: 2,\n    name: \"Painkiller\",\n    time: \"03:00 PM\",\n    status: \"Pending\"\n  }],\n  notes: [\"Patient is diabetic. Monitoring sugar levels.\"],\n  painLevel: 6,\n  upcomingTasks: [{\n    id: 1,\n    task: \"Blood Sugar Test\",\n    time: \"11:00 AM\"\n  }]\n}, {\n  id: 3,\n  name: \"Arjun Mehta\",\n  vitals: {\n    bp: \"130/85 mmHg\",\n    hr: 90,\n    spo2: 93,\n    temp: \"100.2°F\"\n  },\n  medications: [{\n    id: 1,\n    name: \"Cough Syrup\",\n    time: \"10:00 AM\",\n    status: \"Given\"\n  }, {\n    id: 2,\n    name: \"Antibiotic\",\n    time: \"06:00 PM\",\n    status: \"Pending\"\n  }],\n  notes: [\"Patient has chest congestion.\"],\n  painLevel: 5,\n  upcomingTasks: [{\n    id: 1,\n    task: \"Chest X-ray\",\n    time: \"03:00 PM\"\n  }]\n}, {\n  id: 4,\n  name: \"Sneha Kapoor\",\n  vitals: {\n    bp: \"118/76 mmHg\",\n    hr: 72,\n    spo2: 99,\n    temp: \"98.4°F\"\n  },\n  medications: [{\n    id: 1,\n    name: \"Vitamin D\",\n    time: \"09:00 AM\",\n    status: \"Given\"\n  }],\n  notes: [\"Recovering from surgery.\"],\n  painLevel: 3,\n  upcomingTasks: [{\n    id: 1,\n    task: \"Suture removal\",\n    time: \"05:00 PM\"\n  }]\n}, {\n  id: 5,\n  name: \"Ravi Iyer\",\n  vitals: {\n    bp: \"140/95 mmHg\",\n    hr: 95,\n    spo2: 92,\n    temp: \"99.7°F\"\n  },\n  medications: [{\n    id: 1,\n    name: \"Blood Pressure Tablet\",\n    time: \"07:00 AM\",\n    status: \"Given\"\n  }, {\n    id: 2,\n    name: \"Cholesterol Medicine\",\n    time: \"09:00 PM\",\n    status: \"Pending\"\n  }],\n  notes: [\"Patient has hypertension.\"],\n  painLevel: 7,\n  upcomingTasks: [{\n    id: 1,\n    task: \"ECG\",\n    time: \"12:00 PM\"\n  }]\n}, {\n  id: 6,\n  name: \"Priya Nair\",\n  vitals: {\n    bp: \"115/75 mmHg\",\n    hr: 80,\n    spo2: 98,\n    temp: \"98.9°F\"\n  },\n  medications: [{\n    id: 1,\n    name: \"Iron Supplement\",\n    time: \"08:00 AM\",\n    status: \"Given\"\n  }, {\n    id: 2,\n    name: \"Calcium Tablet\",\n    time: \"08:00 PM\",\n    status: \"Pending\"\n  }],\n  notes: [\"Patient is anemic.\"],\n  painLevel: 2,\n  upcomingTasks: [{\n    id: 1,\n    task: \"Blood Test\",\n    time: \"10:30 AM\"\n  }]\n}, {\n  id: 7,\n  name: \"Mohit Verma\",\n  vitals: {\n    bp: \"125/82 mmHg\",\n    hr: 88,\n    spo2: 96,\n    temp: \"99.3°F\"\n  },\n  medications: [{\n    id: 1,\n    name: \"Antacid\",\n    time: \"07:30 AM\",\n    status: \"Given\"\n  }, {\n    id: 2,\n    name: \"Painkiller\",\n    time: \"01:00 PM\",\n    status: \"Pending\"\n  }],\n  notes: [\"Complains of stomach pain.\"],\n  painLevel: 5,\n  upcomingTasks: [{\n    id: 1,\n    task: \"Ultrasound\",\n    time: \"04:00 PM\"\n  }]\n}, {\n  id: 8,\n  name: \"Neha Singh\",\n  vitals: {\n    bp: \"122/78 mmHg\",\n    hr: 76,\n    spo2: 97,\n    temp: \"98.7°F\"\n  },\n  medications: [{\n    id: 1,\n    name: \"Vitamin B12\",\n    time: \"09:00 AM\",\n    status: \"Given\"\n  }],\n  notes: [\"Patient is stable and cheerful.\"],\n  painLevel: 1,\n  upcomingTasks: [{\n    id: 1,\n    task: \"Routine Checkup\",\n    time: \"06:00 PM\"\n  }]\n}, {\n  id: 9,\n  name: \"Karan Malhotra\",\n  vitals: {\n    bp: \"135/88 mmHg\",\n    hr: 92,\n    spo2: 94,\n    temp: \"100.5°F\"\n  },\n  medications: [{\n    id: 1,\n    name: \"Antibiotic\",\n    time: \"08:00 AM\",\n    status: \"Given\"\n  }, {\n    id: 2,\n    name: \"Paracetamol\",\n    time: \"02:00 PM\",\n    status: \"Pending\"\n  }],\n  notes: [\"Patient has mild fever.\"],\n  painLevel: 6,\n  upcomingTasks: [{\n    id: 1,\n    task: \"Blood Culture\",\n    time: \"11:00 AM\"\n  }]\n}, {\n  id: 10,\n  name: \"Pooja Reddy\",\n  vitals: {\n    bp: \"118/74 mmHg\",\n    hr: 70,\n    spo2: 99,\n    temp: \"98.3°F\"\n  },\n  medications: [{\n    id: 1,\n    name: \"Multivitamin\",\n    time: \"08:00 AM\",\n    status: \"Given\"\n  }],\n  notes: [\"Recovering well after flu.\"],\n  painLevel: 2,\n  upcomingTasks: [{\n    id: 1,\n    task: \"Final Checkup\",\n    time: \"03:30 PM\"\n  }]\n}];\nconst PatientCare = () => {\n  _s();\n  const [selectedPatient, setSelectedPatient] = useState(mockPatients[0]);\n  const [showNotes, setShowNotes] = useState(false);\n  const [newNote, setNewNote] = useState(\"\");\n\n  // ✅ Add Note Handler\n  const handleAddNote = () => {\n    if (newNote.trim() !== \"\") {\n      setSelectedPatient(prev => ({\n        ...prev,\n        notes: [...prev.notes, newNote]\n      }));\n      setNewNote(\"\");\n      setShowNotes(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-4 shadow\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      className: \"bg-primary text-white d-flex justify-content-between align-items-center\",\n      children: [\"Patient Care\", /*#__PURE__*/_jsxDEV(Form.Select, {\n        style: {\n          width: \"200px\"\n        },\n        value: selectedPatient.id,\n        onChange: e => setSelectedPatient(mockPatients.find(p => p.id === parseInt(e.target.value))),\n        children: mockPatients.map(patient => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: patient.id,\n          children: patient.name\n        }, patient.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Vital Signs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"BP:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), \" \", selectedPatient.vitals.bp, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"HR:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), \" \", selectedPatient.vitals.hr, \" bpm |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"SpO\\u2082:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), \" \", selectedPatient.vitals.spo2, \"% |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Temp:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), \" \", selectedPatient.vitals.temp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Medication Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"mb-3\",\n        children: selectedPatient.medications.map(med => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [med.name, \" - \", med.time, \" \", med.status === \"Given\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-success\",\n            children: [\"\\u2705 \", med.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: [\"\\u23F3 \", med.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this)]\n        }, med.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Nursing Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        variant: \"outline-primary\",\n        onClick: () => setShowNotes(true),\n        children: \"View / Add Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: showNotes,\n        onHide: () => setShowNotes(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: [\"Nursing Notes - \", selectedPatient.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: selectedPatient.notes.map((note, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: note\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 2,\n            placeholder: \"Write new note...\",\n            value: newNote,\n            onChange: e => setNewNote(e.target.value),\n            className: \"mt-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => setShowNotes(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleAddNote,\n            children: \"Add Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Pain/Comfort Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Pain Level: \", selectedPatient.painLevel, \"/10\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: selectedPatient.painLevel * 10,\n        variant: selectedPatient.painLevel > 6 ? \"danger\" : \"warning\",\n        className: \"mb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Upcoming Care Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: selectedPatient.upcomingTasks.map(task => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [\"\\uD83D\\uDCDD \", task.task, \" \\u2014 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: task.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 32\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientCare, \"c5ldGsLIDWqDYwjUIIV4xXn+C0M=\");\n_c = PatientCare;\nexport default PatientCare;\nvar _c;\n$RefreshReg$(_c, \"PatientCare\");","map":{"version":3,"names":["React","useState","Card","ListGroup","ProgressBar","Button","Modal","Form","jsxDEV","_jsxDEV","mockPatients","id","name","vitals","bp","hr","spo2","temp","medications","time","status","notes","painLevel","upcomingTasks","task","PatientCare","_s","selectedPatient","setSelectedPatient","showNotes","setShowNotes","newNote","setNewNote","handleAddNote","trim","prev","className","children","Header","Select","style","width","value","onChange","e","find","p","parseInt","target","map","patient","fileName","_jsxFileName","lineNumber","columnNumber","Body","med","Item","size","variant","onClick","show","onHide","closeButton","Title","note","index","Control","as","rows","placeholder","Footer","now","_c","$RefreshReg$"],"sources":["C:/Users/rauna/OneDrive/Desktop/v1.0/staff-portal/src/pages/NurseMain/PaitientCare.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Card, ListGroup, ProgressBar, Button, Modal, Form } from \"react-bootstrap\";\n\n\n\n// Mock Patients Data (10 patients)\nconst mockPatients = [\n  {\n    id: 1,\n    name: \"Rahul Sharma\",\n    vitals: { bp: \"120/80 mmHg\", hr: 78, spo2: 97, temp: \"98.6°F\" },\n    medications: [\n      { id: 1, name: \"Paracetamol\", time: \"08:00 AM\", status: \"Given\" },\n      { id: 2, name: \"Antibiotic\", time: \"02:00 PM\", status: \"Pending\" },\n    ],\n    notes: [\"Patient complained of mild headache.\"],\n    painLevel: 4,\n    upcomingTasks: [\n      { id: 1, task: \"Dressing change\", time: \"02:00 PM\" },\n      { id: 2, task: \"Physiotherapy session\", time: \"04:30 PM\" },\n    ],\n  },\n  {\n    id: 2,\n    name: \"Anita Desai\",\n    vitals: { bp: \"110/70 mmHg\", hr: 85, spo2: 95, temp: \"99.1°F\" },\n    medications: [\n      { id: 1, name: \"Insulin\", time: \"09:00 AM\", status: \"Given\" },\n      { id: 2, name: \"Painkiller\", time: \"03:00 PM\", status: \"Pending\" },\n    ],\n    notes: [\"Patient is diabetic. Monitoring sugar levels.\"],\n    painLevel: 6,\n    upcomingTasks: [{ id: 1, task: \"Blood Sugar Test\", time: \"11:00 AM\" }],\n  },\n  {\n    id: 3,\n    name: \"Arjun Mehta\",\n    vitals: { bp: \"130/85 mmHg\", hr: 90, spo2: 93, temp: \"100.2°F\" },\n    medications: [\n      { id: 1, name: \"Cough Syrup\", time: \"10:00 AM\", status: \"Given\" },\n      { id: 2, name: \"Antibiotic\", time: \"06:00 PM\", status: \"Pending\" },\n    ],\n    notes: [\"Patient has chest congestion.\"],\n    painLevel: 5,\n    upcomingTasks: [{ id: 1, task: \"Chest X-ray\", time: \"03:00 PM\" }],\n  },\n  {\n    id: 4,\n    name: \"Sneha Kapoor\",\n    vitals: { bp: \"118/76 mmHg\", hr: 72, spo2: 99, temp: \"98.4°F\" },\n    medications: [{ id: 1, name: \"Vitamin D\", time: \"09:00 AM\", status: \"Given\" }],\n    notes: [\"Recovering from surgery.\"],\n    painLevel: 3,\n    upcomingTasks: [{ id: 1, task: \"Suture removal\", time: \"05:00 PM\" }],\n  },\n  {\n    id: 5,\n    name: \"Ravi Iyer\",\n    vitals: { bp: \"140/95 mmHg\", hr: 95, spo2: 92, temp: \"99.7°F\" },\n    medications: [\n      { id: 1, name: \"Blood Pressure Tablet\", time: \"07:00 AM\", status: \"Given\" },\n      { id: 2, name: \"Cholesterol Medicine\", time: \"09:00 PM\", status: \"Pending\" },\n    ],\n    notes: [\"Patient has hypertension.\"],\n    painLevel: 7,\n    upcomingTasks: [{ id: 1, task: \"ECG\", time: \"12:00 PM\" }],\n  },\n  {\n    id: 6,\n    name: \"Priya Nair\",\n    vitals: { bp: \"115/75 mmHg\", hr: 80, spo2: 98, temp: \"98.9°F\" },\n    medications: [\n      { id: 1, name: \"Iron Supplement\", time: \"08:00 AM\", status: \"Given\" },\n      { id: 2, name: \"Calcium Tablet\", time: \"08:00 PM\", status: \"Pending\" },\n    ],\n    notes: [\"Patient is anemic.\"],\n    painLevel: 2,\n    upcomingTasks: [{ id: 1, task: \"Blood Test\", time: \"10:30 AM\" }],\n  },\n  {\n    id: 7,\n    name: \"Mohit Verma\",\n    vitals: { bp: \"125/82 mmHg\", hr: 88, spo2: 96, temp: \"99.3°F\" },\n    medications: [\n      { id: 1, name: \"Antacid\", time: \"07:30 AM\", status: \"Given\" },\n      { id: 2, name: \"Painkiller\", time: \"01:00 PM\", status: \"Pending\" },\n    ],\n    notes: [\"Complains of stomach pain.\"],\n    painLevel: 5,\n    upcomingTasks: [{ id: 1, task: \"Ultrasound\", time: \"04:00 PM\" }],\n  },\n  {\n    id: 8,\n    name: \"Neha Singh\",\n    vitals: { bp: \"122/78 mmHg\", hr: 76, spo2: 97, temp: \"98.7°F\" },\n    medications: [{ id: 1, name: \"Vitamin B12\", time: \"09:00 AM\", status: \"Given\" }],\n    notes: [\"Patient is stable and cheerful.\"],\n    painLevel: 1,\n    upcomingTasks: [{ id: 1, task: \"Routine Checkup\", time: \"06:00 PM\" }],\n  },\n  {\n    id: 9,\n    name: \"Karan Malhotra\",\n    vitals: { bp: \"135/88 mmHg\", hr: 92, spo2: 94, temp: \"100.5°F\" },\n    medications: [\n      { id: 1, name: \"Antibiotic\", time: \"08:00 AM\", status: \"Given\" },\n      { id: 2, name: \"Paracetamol\", time: \"02:00 PM\", status: \"Pending\" },\n    ],\n    notes: [\"Patient has mild fever.\"],\n    painLevel: 6,\n    upcomingTasks: [{ id: 1, task: \"Blood Culture\", time: \"11:00 AM\" }],\n  },\n  {\n    id: 10,\n    name: \"Pooja Reddy\",\n    vitals: { bp: \"118/74 mmHg\", hr: 70, spo2: 99, temp: \"98.3°F\" },\n    medications: [{ id: 1, name: \"Multivitamin\", time: \"08:00 AM\", status: \"Given\" }],\n    notes: [\"Recovering well after flu.\"],\n    painLevel: 2,\n    upcomingTasks: [{ id: 1, task: \"Final Checkup\", time: \"03:30 PM\" }],\n  },\n];\n\n\nconst PatientCare = () => {\n  const [selectedPatient, setSelectedPatient] = useState(mockPatients[0]);\n  const [showNotes, setShowNotes] = useState(false);\n  const [newNote, setNewNote] = useState(\"\");\n\n  // ✅ Add Note Handler\n  const handleAddNote = () => {\n    if (newNote.trim() !== \"\") {\n      setSelectedPatient((prev) => ({\n        ...prev,\n        notes: [...prev.notes, newNote],\n      }));\n      setNewNote(\"\");\n      setShowNotes(false);\n    }\n  };\n\n  return (\n    <Card className=\"mb-4 shadow\">\n      <Card.Header className=\"bg-primary text-white d-flex justify-content-between align-items-center\">\n        Patient Care\n        <Form.Select\n          style={{ width: \"200px\" }}\n          value={selectedPatient.id}\n          onChange={(e) =>\n            setSelectedPatient(\n              mockPatients.find((p) => p.id === parseInt(e.target.value))\n            )\n          }\n        >\n          {mockPatients.map((patient) => (\n            <option key={patient.id} value={patient.id}>\n              {patient.name}\n            </option>\n          ))}\n        </Form.Select>\n      </Card.Header>\n\n      <Card.Body>\n        {/* Vitals */}\n        <h5>Vital Signs</h5>\n        <p>\n          <strong>BP:</strong> {selectedPatient.vitals.bp} |{\" \"}\n          <strong>HR:</strong> {selectedPatient.vitals.hr} bpm |{\" \"}\n          <strong>SpO₂:</strong> {selectedPatient.vitals.spo2}% |{\" \"}\n          <strong>Temp:</strong> {selectedPatient.vitals.temp}\n        </p>\n        <hr />\n\n        {/* Medications */}\n        <h5>Medication Schedule</h5>\n        <ListGroup className=\"mb-3\">\n          {selectedPatient.medications.map((med) => (\n            <ListGroup.Item key={med.id}>\n              {med.name} - {med.time}{\" \"}\n              {med.status === \"Given\" ? (\n                <span className=\"text-success\">✅ {med.status}</span>\n              ) : (\n                <span className=\"text-danger\">⏳ {med.status}</span>\n              )}\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n        <hr />\n\n        {/* Notes */}\n        <h5>Nursing Notes</h5>\n        <Button\n          size=\"sm\"\n          variant=\"outline-primary\"\n          onClick={() => setShowNotes(true)}\n        >\n          View / Add Notes\n        </Button>\n        <Modal show={showNotes} onHide={() => setShowNotes(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Nursing Notes - {selectedPatient.name}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <ul>\n              {selectedPatient.notes.map((note, index) => (\n                <li key={index}>{note}</li>\n              ))}\n            </ul>\n            <Form.Control\n              as=\"textarea\"\n              rows={2}\n              placeholder=\"Write new note...\"\n              value={newNote}\n              onChange={(e) => setNewNote(e.target.value)}\n              className=\"mt-2\"\n            />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => setShowNotes(false)}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleAddNote}>\n              Add Note\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <hr />\n\n        {/* Pain Scale */}\n        <h5>Pain/Comfort Level</h5>\n        <p>Current Pain Level: {selectedPatient.painLevel}/10</p>\n        <ProgressBar\n          now={selectedPatient.painLevel * 10}\n          variant={selectedPatient.painLevel > 6 ? \"danger\" : \"warning\"}\n          className=\"mb-3\"\n        />\n        <hr />\n\n        {/* Upcoming Care Tasks */}\n        <h5>Upcoming Care Tasks</h5>\n        <ListGroup>\n          {selectedPatient.upcomingTasks.map((task) => (\n            <ListGroup.Item key={task.id}>\n              📝 {task.task} — <strong>{task.time}</strong>\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default PatientCare;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}