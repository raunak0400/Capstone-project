{"ast":null,"code":"import axios from'axios';const API_BASE_URL='http://localhost:5000/api';// Create axios instance with base configuration\nconst api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Request interceptor to add auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('staffToken');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Response interceptor to handle auth errors\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('staffToken');localStorage.removeItem('staffUser');window.location.href='/login';}return Promise.reject(error);});// Staff Auth API\nexport const staffAuthAPI={login:credentials=>api.post('/staff/auth/login',credentials),logout:()=>{localStorage.removeItem('staffToken');localStorage.removeItem('staffUser');}};// Patient API for Staff\nexport const patientAPI={// Get all patients with search and pagination\ngetPatients:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const{page=1,limit=10,search='',sortBy='createdAt',sortOrder='desc'}=params;return api.get('/staff/patients',{params:{page,limit,search,sortBy,sortOrder}});},// Get single patient\ngetPatient:id=>api.get(\"/staff/patients/\".concat(id)),// Create new patient\ncreatePatient:patientData=>api.post('/staff/patients',patientData),// Update patient\nupdatePatient:(id,patientData)=>api.put(\"/staff/patients/\".concat(id),patientData),// Delete patient\ndeletePatient:id=>api.delete(\"/staff/patients/\".concat(id))};// Staff Analytics API\nexport const staffAnalyticsAPI={// Get dashboard stats for staff\ngetDashboardStats:role=>api.get(\"/staff/analytics/dashboard/\".concat(role)),// Get gender distribution\ngetGenderDistribution:()=>api.get('/staff/analytics/gender'),// Get age distribution\ngetAgeDistribution:()=>api.get('/staff/analytics/age'),// Get patients over time\ngetPatientsOverTime:()=>api.get('/staff/analytics/patients-over-time')};// Appointment API for Staff\nexport const appointmentAPI={// Get appointments (staff endpoint)\ngetAppointments:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const{page=1,limit=10,date='',doctor='',status=''}=params;return api.get('/staff/appointments',{params:{page,limit,date,doctor,status}});},// Create appointment\ncreateAppointment:appointmentData=>api.post('/staff/appointments',appointmentData),// Update appointment\nupdateAppointment:(id,appointmentData)=>api.put(\"/staff/appointments/\".concat(id),appointmentData),// Delete appointment\ndeleteAppointment:id=>api.delete(\"/staff/appointments/\".concat(id))};// Staff Management API (Admin only)\nexport const staffAPI={// Get all staff\ngetStaff:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const{page=1,limit=10,role='',search=''}=params;return api.get('/admin/staff',{params:{page,limit,role,search}});},// Create staff member\ncreateStaff:staffData=>api.post('/admin/staff',staffData),// Update staff member\nupdateStaff:(id,staffData)=>api.put(\"/admin/staff/\".concat(id),staffData),// Delete staff member\ndeleteStaff:id=>api.delete(\"/admin/staff/\".concat(id))};// Pharmacy API\nexport const pharmacyAPI={// Get prescriptions\ngetPrescriptions:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const{page=1,limit=10,status='',search=''}=params;return api.get('/pharmacy/prescriptions',{params:{page,limit,status,search}});},// Update prescription status\nupdatePrescriptionStatus:(id,status)=>api.put(\"/pharmacy/prescriptions/\".concat(id,\"/status\"),{status}),// Get inventory\ngetInventory:()=>api.get('/pharmacy/inventory')};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","staffAuthAPI","login","credentials","post","logout","patientAPI","getPatients","params","arguments","length","undefined","page","limit","search","sortBy","sortOrder","get","getPatient","id","createPatient","patientData","updatePatient","put","deletePatient","delete","staffAnalyticsAPI","getDashboardStats","role","getGenderDistribution","getAgeDistribution","getPatientsOverTime","appointmentAPI","getAppointments","date","doctor","createAppointment","appointmentData","updateAppointment","deleteAppointment","staffAPI","getStaff","createStaff","staffData","updateStaff","deleteStaff","pharmacyAPI","getPrescriptions","updatePrescriptionStatus","getInventory"],"sources":["C:/Users/rauna/OneDrive/Desktop/v1.0/staff-portal/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\n// Create axios instance with base configuration\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('staffToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle auth errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('staffToken');\r\n      localStorage.removeItem('staffUser');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Staff Auth API\r\nexport const staffAuthAPI = {\r\n  login: (credentials) => api.post('/staff/auth/login', credentials),\r\n  logout: () => {\r\n    localStorage.removeItem('staffToken');\r\n    localStorage.removeItem('staffUser');\r\n  },\r\n};\r\n\r\n// Patient API for Staff\r\nexport const patientAPI = {\r\n  // Get all patients with search and pagination\r\n  getPatients: (params = {}) => {\r\n    const { page = 1, limit = 10, search = '', sortBy = 'createdAt', sortOrder = 'desc' } = params;\r\n    return api.get('/staff/patients', {\r\n      params: { page, limit, search, sortBy, sortOrder }\r\n    });\r\n  },\r\n\r\n  // Get single patient\r\n  getPatient: (id) => api.get(`/staff/patients/${id}`),\r\n\r\n  // Create new patient\r\n  createPatient: (patientData) => api.post('/staff/patients', patientData),\r\n\r\n  // Update patient\r\n  updatePatient: (id, patientData) => api.put(`/staff/patients/${id}`, patientData),\r\n\r\n  // Delete patient\r\n  deletePatient: (id) => api.delete(`/staff/patients/${id}`),\r\n};\r\n\r\n// Staff Analytics API\r\nexport const staffAnalyticsAPI = {\r\n  // Get dashboard stats for staff\r\n  getDashboardStats: (role) => api.get(`/staff/analytics/dashboard/${role}`),\r\n\r\n  // Get gender distribution\r\n  getGenderDistribution: () => api.get('/staff/analytics/gender'),\r\n\r\n  // Get age distribution\r\n  getAgeDistribution: () => api.get('/staff/analytics/age'),\r\n\r\n  // Get patients over time\r\n  getPatientsOverTime: () => api.get('/staff/analytics/patients-over-time'),\r\n};\r\n\r\n// Appointment API for Staff\r\nexport const appointmentAPI = {\r\n  // Get appointments (staff endpoint)\r\n  getAppointments: (params = {}) => {\r\n    const { page = 1, limit = 10, date = '', doctor = '', status = '' } = params;\r\n    return api.get('/staff/appointments', {\r\n      params: { page, limit, date, doctor, status }\r\n    });\r\n  },\r\n\r\n  // Create appointment\r\n  createAppointment: (appointmentData) => api.post('/staff/appointments', appointmentData),\r\n\r\n  // Update appointment\r\n  updateAppointment: (id, appointmentData) => api.put(`/staff/appointments/${id}`, appointmentData),\r\n\r\n  // Delete appointment\r\n  deleteAppointment: (id) => api.delete(`/staff/appointments/${id}`),\r\n};\r\n\r\n// Staff Management API (Admin only)\r\nexport const staffAPI = {\r\n  // Get all staff\r\n  getStaff: (params = {}) => {\r\n    const { page = 1, limit = 10, role = '', search = '' } = params;\r\n    return api.get('/admin/staff', {\r\n      params: { page, limit, role, search }\r\n    });\r\n  },\r\n\r\n  // Create staff member\r\n  createStaff: (staffData) => api.post('/admin/staff', staffData),\r\n\r\n  // Update staff member\r\n  updateStaff: (id, staffData) => api.put(`/admin/staff/${id}`, staffData),\r\n\r\n  // Delete staff member\r\n  deleteStaff: (id) => api.delete(`/admin/staff/${id}`),\r\n};\r\n\r\n// Pharmacy API\r\nexport const pharmacyAPI = {\r\n  // Get prescriptions\r\n  getPrescriptions: (params = {}) => {\r\n    const { page = 1, limit = 10, status = '', search = '' } = params;\r\n    return api.get('/pharmacy/prescriptions', {\r\n      params: { page, limit, status, search }\r\n    });\r\n  },\r\n\r\n  // Update prescription status\r\n  updatePrescriptionStatus: (id, status) => api.put(`/pharmacy/prescriptions/${id}/status`, { status }),\r\n\r\n  // Get inventory\r\n  getInventory: () => api.get('/pharmacy/inventory'),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}