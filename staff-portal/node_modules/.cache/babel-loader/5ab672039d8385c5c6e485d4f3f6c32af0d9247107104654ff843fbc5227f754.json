{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{PlusIcon,SearchIcon,ViewListIcon,ViewGridIcon,FilterIcon}from'@heroicons/react/outline';import{patientAPI}from'../../services/api';import PatientCard from'../../components/PatientCard';import PatientTable from'../../components/PatientTable';import Loader from'../../components/Loader';import toast from'react-hot-toast';import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const mockPatients=[{_id:'1',name:'John Doe',email:'john@example.com',phone:'9876543210',gender:'Male',age:30,createdAt:'2025-01-01'},{_id:'2',name:'Jane Smith',email:'jane@example.com',phone:'9876543211',gender:'Female',age:25,createdAt:'2025-02-01'},{_id:'3',name:'Bob Johnson',email:'bob@example.com',phone:'9876543212',gender:'Male',age:40,createdAt:'2025-03-01'},{_id:'4',name:'Alice Brown',email:'alice@example.com',phone:'9876543213',gender:'Female',age:35,createdAt:'2025-04-01'},{_id:'5',name:'Charlie White',email:'charlie@example.com',phone:'9876543214',gender:'Male',age:28,createdAt:'2025-05-01'},{_id:'6',name:'Diana Green',email:'diana@example.com',phone:'9876543215',gender:'Female',age:32,createdAt:'2025-06-01'},{_id:'7',name:'Evan Black',email:'evan@example.com',phone:'9876543216',gender:'Male',age:45,createdAt:'2025-07-01'},{_id:'8',name:'Fiona Blue',email:'fiona@example.com',phone:'9876543217',gender:'Female',age:29,createdAt:'2025-08-01'},{_id:'9',name:'George Yellow',email:'george@example.com',phone:'9876543218',gender:'Male',age:38,createdAt:'2025-09-01'},{_id:'10',name:'Hannah Red',email:'hannah@example.com',phone:'9876543219',gender:'Female',age:26,createdAt:'2025-10-01'},{_id:'11',name:'Ian Purple',email:'ian@example.com',phone:'9876543220',gender:'Male',age:31,createdAt:'2025-11-01'}// Add more mock patients here\n];const Patients=()=>{const[patients,setPatients]=useState([]);const[loading,setLoading]=useState(true);const[searchTerm,setSearchTerm]=useState('');const[currentPage,setCurrentPage]=useState(1);const[totalPages,setTotalPages]=useState(1);const[viewMode,setViewMode]=useState('table');// 'table' or 'card'\nconst[sortBy,setSortBy]=useState('createdAt');const[sortOrder,setSortOrder]=useState('desc');useEffect(()=>{fetchPatients();},[currentPage,searchTerm,sortBy,sortOrder]);//fetchin backend data\n// const fetchPatients = async () => {\n//   try {\n//     setLoading(true);\n//     const response = await patientAPI.getPatients({\n//       page: currentPage,\n//       limit: 10,\n//       search: searchTerm,\n//       sortBy,\n//       sortOrder\n//     });\n//     setPatients(response.data.patients);\n//     setTotalPages(Math.ceil(response.data.total / 10));\n//   } catch (error) {\n//     console.error('Error fetching patients:', error);\n//     toast.error('Failed to load patients');\n//   } finally {\n//     setLoading(false);\n//   }\n// };\n//temprory using mock data for test\nconst fetchPatients=async()=>{try{setLoading(true);// Simulate API delay\nawait new Promise(resolve=>setTimeout(resolve,500));// Filter/search mock data\nlet filteredPatients=mockPatients.filter(patient=>patient.name.toLowerCase().includes(searchTerm.toLowerCase())||patient.email.toLowerCase().includes(searchTerm.toLowerCase())||patient.phone.includes(searchTerm));// Sort\nfilteredPatients.sort((a,b)=>{if(sortOrder==='asc')return a[sortBy]>b[sortBy]?1:-1;return a[sortBy]<b[sortBy]?1:-1;});// Pagination\nconst limit=10;const startIndex=(currentPage-1)*limit;const paginatedPatients=filteredPatients.slice(startIndex,startIndex+limit);setPatients(paginatedPatients);setTotalPages(Math.ceil(filteredPatients.length/limit));}catch(error){console.error('Error fetching patients:',error);}finally{setLoading(false);}};//this for deletion of backend data\n// const handleDelete = async (patientId) => {\n//   if (window.confirm('Are you sure you want to delete this patient?')) {\n//     try {\n//       await patientAPI.deletePatient(patientId);\n//       toast.success('Patient deleted successfully');\n//       fetchPatients();\n//     } catch (error) {\n//       console.error('Error deleting patient:', error);\n//       toast.error('Failed to delete patient');\n//     }\n//   }\n// };\n//this for mock data temp\nconst handleDelete=patientId=>{if(window.confirm('Are you sure you want to delete this patient?')){setPatients(prev=>prev.filter(p=>p._id!==patientId));toast.success('Patient deleted successfully (mock)');}};const handleEdit=patientId=>{const patient=mockPatients.find(p=>p._id===patientId);if(patient){toast(\"Edit patient: \".concat(patient.name,\" (mock)\"));console.log('Edit patient data:',patient);}};const handleView=patientId=>{const patient=mockPatients.find(p=>p._id===patientId);if(patient){toast(\"Patient Details:\\nName: \".concat(patient.firstName||patient.name,\" \").concat(patient.lastName||'',\"\\nID: \").concat(patient._id,\"\\nEmail: \").concat(patient.email||'N/A',\"\\nPhone: \").concat(patient.phone||'N/A',\"\\nGender: \").concat(patient.gender||'N/A',\"\\nAge: \").concat(patient.age,\"\\nAddress: \").concat(patient.address||'N/A',\"\\nStatus: \").concat(patient.status||'Active',\"\\nMedical History: \").concat(patient.medicalHistory));console.log('View patient data:',patient);}};//addes end \nconst handleSort=(field,direction)=>{setSortBy(field);setSortOrder(direction);};const handleSearch=e=>{e.preventDefault();setCurrentPage(1);fetchPatients();};const handlePageChange=page=>{setCurrentPage(page);};const Pagination=()=>{const pages=[];const maxVisiblePages=5;let startPage=Math.max(1,currentPage-Math.floor(maxVisiblePages/2));let endPage=Math.min(totalPages,startPage+maxVisiblePages-1);if(endPage-startPage+1<maxVisiblePages){startPage=Math.max(1,endPage-maxVisiblePages+1);}for(let i=startPage;i<=endPage;i++){pages.push(i);}return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-700\",children:[\"Showing \",(currentPage-1)*10+1,\" to \",Math.min(currentPage*10,patients.length+(currentPage-1)*10),\" of \",patients.length+(currentPage-1)*10,\" results\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-1\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handlePageChange(currentPage-1),disabled:currentPage===1,className:\"px-3 py-1 text-sm border rounded-md disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50\",children:\"Previous\"}),pages.map(page=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handlePageChange(page),className:\"px-3 py-1 text-sm border rounded-md \".concat(page===currentPage?'bg-blue-600 text-white border-blue-600':'hover:bg-gray-50'),children:page},page)),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handlePageChange(currentPage+1),disabled:currentPage===totalPages,className:\"px-3 py-1 text-sm border rounded-md disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50\",children:\"Next\"})]})]});};if(loading){return/*#__PURE__*/_jsx(Loader,{size:\"lg\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-gray-900\",children:\"Patients\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Manage patient records and information\"})]}),/*#__PURE__*/_jsxs(Link,{to:\"/add-patient\",className:\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors flex items-center\",children:[/*#__PURE__*/_jsx(PlusIcon,{className:\"h-5 w-5 mr-2\"}),\"Add Patient\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white p-6 rounded-lg shadow-md\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col md:flex-row md:items-center md:justify-between space-y-4 md:space-y-0\",children:[/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSearch,className:\"flex-1 max-w-md\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(SearchIcon,{className:\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search patients by name, email, or phone...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),className:\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center space-x-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center bg-gray-100 rounded-md p-1\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setViewMode('table'),className:\"p-2 rounded-md \".concat(viewMode==='table'?'bg-white shadow-sm':'text-gray-600 hover:text-gray-900'),children:/*#__PURE__*/_jsx(ViewListIcon,{className:\"h-5 w-5\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setViewMode('card'),className:\"p-2 rounded-md \".concat(viewMode==='card'?'bg-white shadow-sm':'text-gray-600 hover:text-gray-900'),children:/*#__PURE__*/_jsx(ViewGridIcon,{className:\"h-5 w-5\"})})]})})]})}),patients.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg shadow-md p-12 text-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-500\",children:[/*#__PURE__*/_jsx(SearchIcon,{className:\"h-12 w-12 mx-auto mb-4 text-gray-300\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-2\",children:\"No patients found\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-6\",children:searchTerm?'Try adjusting your search terms.':'Get started by adding your first patient.'}),!searchTerm&&/*#__PURE__*/_jsx(Link,{to:\"/add-patient\",className:\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors\",children:\"Add First Patient\"})]})}):/*#__PURE__*/_jsxs(_Fragment,{children:[viewMode==='table'?/*#__PURE__*/_jsx(PatientTable,{patients:patients,onDelete:handleDelete,onEdit:handleEdit// ← ADD THIS\n,onView:handleView// ← ADD THIS\n,onSort:handleSort}):/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",children:patients.map(patient=>/*#__PURE__*/_jsx(PatientCard,{patient:patient,onDelete:handleDelete,onEdit:handleEdit// ← ADD THIS\n,onView:handleView// ← ADD THIS\n},patient._id))}),totalPages>1&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-white p-6 rounded-lg shadow-md\",children:/*#__PURE__*/_jsx(Pagination,{})})]})]});};export default Patients;","map":{"version":3,"names":["React","useState","useEffect","Link","PlusIcon","SearchIcon","ViewListIcon","ViewGridIcon","FilterIcon","patientAPI","PatientCard","PatientTable","Loader","toast","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","mockPatients","_id","name","email","phone","gender","age","createdAt","Patients","patients","setPatients","loading","setLoading","searchTerm","setSearchTerm","currentPage","setCurrentPage","totalPages","setTotalPages","viewMode","setViewMode","sortBy","setSortBy","sortOrder","setSortOrder","fetchPatients","Promise","resolve","setTimeout","filteredPatients","filter","patient","toLowerCase","includes","sort","a","b","limit","startIndex","paginatedPatients","slice","Math","ceil","length","error","console","handleDelete","patientId","window","confirm","prev","p","success","handleEdit","find","concat","log","handleView","firstName","lastName","address","status","medicalHistory","handleSort","field","direction","handleSearch","e","preventDefault","handlePageChange","page","Pagination","pages","maxVisiblePages","startPage","max","floor","endPage","min","i","push","className","children","onClick","disabled","map","size","to","onSubmit","type","placeholder","value","onChange","target","onDelete","onEdit","onView","onSort"],"sources":["C:/Users/rauna/OneDrive/Desktop/v1.0/staff-portal/src/pages/Receptionist/Patients.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  PlusIcon,\n  SearchIcon,\n  ViewListIcon,\n  ViewGridIcon,\n  FilterIcon\n} from '@heroicons/react/outline';\nimport { patientAPI } from '../../services/api';\nimport PatientCard from '../../components/PatientCard';\nimport PatientTable from '../../components/PatientTable';\nimport Loader from '../../components/Loader';\nimport toast from 'react-hot-toast';\n\nconst mockPatients = [\n  { _id: '1', name: 'John Doe', email: 'john@example.com', phone: '9876543210', gender: 'Male', age: 30, createdAt: '2025-01-01' },\n  { _id: '2', name: 'Jane Smith', email: 'jane@example.com', phone: '9876543211', gender: 'Female', age: 25, createdAt: '2025-02-01' },\n  { _id: '3', name: 'Bob Johnson', email: 'bob@example.com', phone: '9876543212', gender: 'Male', age: 40, createdAt: '2025-03-01' },\n  { _id: '4', name: 'Alice Brown', email: 'alice@example.com', phone: '9876543213', gender: 'Female', age: 35, createdAt: '2025-04-01' },\n  { _id: '5', name: 'Charlie White', email: 'charlie@example.com', phone: '9876543214', gender: 'Male', age: 28, createdAt: '2025-05-01' },\n  { _id: '6', name: 'Diana Green', email: 'diana@example.com', phone: '9876543215', gender: 'Female', age: 32, createdAt: '2025-06-01' },\n  { _id: '7', name: 'Evan Black', email: 'evan@example.com', phone: '9876543216', gender: 'Male', age: 45, createdAt: '2025-07-01' },\n  { _id: '8', name: 'Fiona Blue', email: 'fiona@example.com', phone: '9876543217', gender: 'Female', age: 29, createdAt: '2025-08-01' },\n  { _id: '9', name: 'George Yellow', email: 'george@example.com', phone: '9876543218', gender: 'Male', age: 38, createdAt: '2025-09-01' },\n  { _id: '10', name: 'Hannah Red', email: 'hannah@example.com', phone: '9876543219', gender: 'Female', age: 26, createdAt: '2025-10-01' },\n  { _id: '11', name: 'Ian Purple', email: 'ian@example.com', phone: '9876543220', gender: 'Male', age: 31, createdAt: '2025-11-01' },\n  // Add more mock patients here\n];\n\n\nconst Patients = () => {\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [viewMode, setViewMode] = useState('table'); // 'table' or 'card'\n  const [sortBy, setSortBy] = useState('createdAt');\n  const [sortOrder, setSortOrder] = useState('desc');\n\n  useEffect(() => {\n    fetchPatients();\n  }, [currentPage, searchTerm, sortBy, sortOrder]);\n\n  //fetchin backend data\n  // const fetchPatients = async () => {\n  //   try {\n  //     setLoading(true);\n  //     const response = await patientAPI.getPatients({\n  //       page: currentPage,\n  //       limit: 10,\n  //       search: searchTerm,\n  //       sortBy,\n  //       sortOrder\n  //     });\n\n  //     setPatients(response.data.patients);\n  //     setTotalPages(Math.ceil(response.data.total / 10));\n  //   } catch (error) {\n  //     console.error('Error fetching patients:', error);\n  //     toast.error('Failed to load patients');\n  //   } finally {\n  //     setLoading(false);\n  //   }\n  // };\n\n  //temprory using mock data for test\n  const fetchPatients = async () => {\n    try {\n      setLoading(true);\n\n      // Simulate API delay\n      await new Promise((resolve) => setTimeout(resolve, 500));\n\n      // Filter/search mock data\n      let filteredPatients = mockPatients.filter((patient) =>\n        patient.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        patient.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        patient.phone.includes(searchTerm)\n      );\n\n      // Sort\n      filteredPatients.sort((a, b) => {\n        if (sortOrder === 'asc') return a[sortBy] > b[sortBy] ? 1 : -1;\n        return a[sortBy] < b[sortBy] ? 1 : -1;\n      });\n\n      // Pagination\n      const limit = 10;\n      const startIndex = (currentPage - 1) * limit;\n      const paginatedPatients = filteredPatients.slice(startIndex, startIndex + limit);\n\n      setPatients(paginatedPatients);\n      setTotalPages(Math.ceil(filteredPatients.length / limit));\n    } catch (error) {\n      console.error('Error fetching patients:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n\n  //this for deletion of backend data\n  // const handleDelete = async (patientId) => {\n  //   if (window.confirm('Are you sure you want to delete this patient?')) {\n  //     try {\n  //       await patientAPI.deletePatient(patientId);\n  //       toast.success('Patient deleted successfully');\n  //       fetchPatients();\n  //     } catch (error) {\n  //       console.error('Error deleting patient:', error);\n  //       toast.error('Failed to delete patient');\n  //     }\n  //   }\n  // };\n\n  //this for mock data temp\n  const handleDelete = (patientId) => {\n    if (window.confirm('Are you sure you want to delete this patient?')) {\n      setPatients(prev => prev.filter(p => p._id !== patientId));\n      toast.success('Patient deleted successfully (mock)');\n    }\n  };\n  const handleEdit = (patientId) => {\n    const patient = mockPatients.find(p => p._id === patientId);\n    if (patient) {\n      toast(`Edit patient: ${patient.name} (mock)`);\n      console.log('Edit patient data:', patient);\n    }\n  };\n\n  const handleView = (patientId) => {\n    const patient = mockPatients.find(p => p._id === patientId);\n    if (patient) {\n      toast(      `Patient Details:\nName: ${patient.firstName || patient.name} ${patient.lastName || ''}\nID: ${patient._id}\nEmail: ${patient.email || 'N/A'}\nPhone: ${patient.phone || 'N/A'}\nGender: ${patient.gender || 'N/A'}\nAge: ${patient.age}\nAddress: ${patient.address || 'N/A'}\nStatus: ${patient.status || 'Active'}\nMedical History: ${patient.medicalHistory}`);\n      console.log('View patient data:', patient);\n    }\n  };\n\n  //addes end \n\n  const handleSort = (field, direction) => {\n    setSortBy(field);\n    setSortOrder(direction);\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    setCurrentPage(1);\n    fetchPatients();\n  };\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const Pagination = () => {\n    const pages = [];\n    const maxVisiblePages = 5;\n\n    let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n    let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);\n\n    if (endPage - startPage + 1 < maxVisiblePages) {\n      startPage = Math.max(1, endPage - maxVisiblePages + 1);\n    }\n\n    for (let i = startPage; i <= endPage; i++) {\n      pages.push(i);\n    }\n\n    return (\n      <div className=\"flex items-center justify-between\">\n        <div className=\"text-sm text-gray-700\">\n          Showing {((currentPage - 1) * 10) + 1} to {Math.min(currentPage * 10, patients.length + ((currentPage - 1) * 10))} of {patients.length + ((currentPage - 1) * 10)} results\n        </div>\n        <div className=\"flex space-x-1\">\n          <button\n            onClick={() => handlePageChange(currentPage - 1)}\n            disabled={currentPage === 1}\n            className=\"px-3 py-1 text-sm border rounded-md disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50\"\n          >\n            Previous\n          </button>\n\n          {pages.map(page => (\n            <button\n              key={page}\n              onClick={() => handlePageChange(page)}\n              className={`px-3 py-1 text-sm border rounded-md ${page === currentPage\n                  ? 'bg-blue-600 text-white border-blue-600'\n                  : 'hover:bg-gray-50'\n                }`}\n            >\n              {page}\n            </button>\n          ))}\n\n          <button\n            onClick={() => handlePageChange(currentPage + 1)}\n            disabled={currentPage === totalPages}\n            className=\"px-3 py-1 text-sm border rounded-md disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50\"\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  if (loading) {\n    return <Loader size=\"lg\" />;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Patients</h1>\n          <p className=\"text-gray-600\">Manage patient records and information</p>\n        </div>\n        <Link\n          to=\"/add-patient\"\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors flex items-center\"\n        >\n          <PlusIcon className=\"h-5 w-5 mr-2\" />\n          Add Patient\n        </Link>\n      </div>\n\n      {/* Search and Filters */}\n      <div className=\"bg-white p-6 rounded-lg shadow-md\">\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between space-y-4 md:space-y-0\">\n          {/* Search */}\n          <form onSubmit={handleSearch} className=\"flex-1 max-w-md\">\n            <div className=\"relative\">\n              <SearchIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n              <input\n                type=\"text\"\n                placeholder=\"Search patients by name, email, or phone...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              />\n            </div>\n          </form>\n\n          {/* View Mode Toggle */}\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center bg-gray-100 rounded-md p-1\">\n              <button\n                onClick={() => setViewMode('table')}\n                className={`p-2 rounded-md ${viewMode === 'table'\n                    ? 'bg-white shadow-sm'\n                    : 'text-gray-600 hover:text-gray-900'\n                  }`}\n              >\n                <ViewListIcon className=\"h-5 w-5\" />\n              </button>\n              <button\n                onClick={() => setViewMode('card')}\n                className={`p-2 rounded-md ${viewMode === 'card'\n                    ? 'bg-white shadow-sm'\n                    : 'text-gray-600 hover:text-gray-900'\n                  }`}\n              >\n                <ViewGridIcon className=\"h-5 w-5\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Patients List */}\n      {patients.length === 0 ? (\n        <div className=\"bg-white rounded-lg shadow-md p-12 text-center\">\n          <div className=\"text-gray-500\">\n            <SearchIcon className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No patients found</h3>\n            <p className=\"text-gray-600 mb-6\">\n              {searchTerm ? 'Try adjusting your search terms.' : 'Get started by adding your first patient.'}\n            </p>\n            {!searchTerm && (\n              <Link\n                to=\"/add-patient\"\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors\"\n              >\n                Add First Patient\n              </Link>\n            )}\n          </div>\n        </div>\n      ) : (\n        <>\n          {/* {viewMode === 'table' ? (\n            <PatientTable\n              patients={patients}\n              onDelete={handleDelete}\n              onSort={handleSort}\n            />\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {patients.map((patient) => (\n                <PatientCard\n                  key={patient._id}\n                  patient={patient}\n                  onDelete={handleDelete}\n                />\n              ))}\n            </div>\n          )} */}\n\n          {viewMode === 'table' ? (\n            <PatientTable\n              patients={patients}\n              onDelete={handleDelete}\n              onEdit={handleEdit}   // ← ADD THIS\n              onView={handleView}   // ← ADD THIS\n              onSort={handleSort}\n            />\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {patients.map((patient) => (\n                <PatientCard\n                  key={patient._id}\n                  patient={patient}\n                  onDelete={handleDelete}\n                  onEdit={handleEdit}  // ← ADD THIS\n                  onView={handleView}  // ← ADD THIS\n                />\n              ))}\n            </div>\n          )}\n\n          {/* Pagination */}\n          {totalPages > 1 && (\n            <div className=\"bg-white p-6 rounded-lg shadow-md\">\n              <Pagination />\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Patients;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}