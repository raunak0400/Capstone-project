{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rauna\\\\OneDrive\\\\Desktop\\\\v1.0\\\\staff-portal\\\\src\\\\pages\\\\DoctorMain\\\\DoctorDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { Container, Row, Col, Card, ListGroup, Badge, Button, Accordion, Form } from \"react-bootstrap\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, PieChart, Pie, Cell, ResponsiveContainer, Legend } from \"recharts\";\nimport { PersonFill, CalendarCheckFill, FileTextFill } from \"react-bootstrap-icons\";\n\n// ----------------- Mock Data -----------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockDoctor = {\n  id: \"123\",\n  name: \"John Doe\",\n  specialization: \"Cardiology\",\n  email: \"john.doe@example.com\"\n};\n\n// compact appointments (dashboard shows a short summary only)\nconst mockAppointments = [{\n  id: 1,\n  patientName: \"Alice Smith\",\n  time: \"09:00 AM\",\n  status: \"Confirmed\"\n}, {\n  id: 2,\n  patientName: \"Bob Johnson\",\n  time: \"09:30 AM\",\n  status: \"Pending\"\n}, {\n  id: 3,\n  patientName: \"Michael Brown\",\n  time: \"10:00 AM\",\n  status: \"Completed\"\n}, {\n  id: 4,\n  patientName: \"Emma Wilson\",\n  time: \"10:30 AM\",\n  status: \"Confirmed\"\n}, {\n  id: 5,\n  patientName: \"David Lee\",\n  time: \"11:00 AM\",\n  status: \"Pending\"\n}, {\n  id: 6,\n  patientName: \"Sophia Taylor\",\n  time: \"11:30 AM\",\n  status: \"Confirmed\"\n}, {\n  id: 7,\n  patientName: \"James Anderson\",\n  time: \"01:00 PM\",\n  status: \"Completed\"\n}, {\n  id: 8,\n  patientName: \"Olivia Martinez\",\n  time: \"01:30 PM\",\n  status: \"Confirmed\"\n}, {\n  id: 9,\n  patientName: \"William Clark\",\n  time: \"02:00 PM\",\n  status: \"Pending\"\n}, {\n  id: 10,\n  patientName: \"Isabella Lewis\",\n  time: \"02:30 PM\",\n  status: \"Confirmed\"\n}];\n\n// Patients (we will not repeat full profiles — just quick cards and a critical list)\nconst mockPatients = [{\n  id: \"p1\",\n  name: \"Alice Smith\",\n  age: 35,\n  gender: \"F\",\n  bloodType: \"A+\",\n  status: \"active\"\n}, {\n  id: \"p2\",\n  name: \"John Doe\",\n  age: 40,\n  gender: \"M\",\n  bloodType: \"B+\",\n  status: \"active\"\n}, {\n  id: \"p3\",\n  name: \"Michael Brown\",\n  age: 47,\n  gender: \"M\",\n  bloodType: \"O-\",\n  status: \"critical\"\n}, {\n  id: \"p4\",\n  name: \"Emma Wilson\",\n  age: 30,\n  gender: \"F\",\n  bloodType: \"AB+\",\n  status: \"active\"\n}, {\n  id: \"p5\",\n  name: \"David Lee\",\n  age: 36,\n  gender: \"M\",\n  bloodType: \"B-\",\n  status: \"active\"\n}, {\n  id: \"p6\",\n  name: \"Sophia Taylor\",\n  age: 33,\n  gender: \"F\",\n  bloodType: \"O+\",\n  status: \"active\"\n}, {\n  id: \"p7\",\n  name: \"James Anderson\",\n  age: 45,\n  gender: \"M\",\n  bloodType: \"A-\",\n  status: \"critical\"\n}, {\n  id: \"p8\",\n  name: \"Olivia Martinez\",\n  age: 27,\n  gender: \"F\",\n  bloodType: \"AB-\",\n  status: \"active\"\n}, {\n  id: \"p9\",\n  name: \"William Clark\",\n  age: 50,\n  gender: \"M\",\n  bloodType: \"B+\",\n  status: \"inactive\"\n}, {\n  id: \"p10\",\n  name: \"Isabella Lewis\",\n  age: 31,\n  gender: \"F\",\n  bloodType: \"A+\",\n  status: \"active\"\n}];\nconst mockNotifications = [{\n  id: 1,\n  message: \"New lab report submitted for Alice Smith.\",\n  type: \"info\"\n}, {\n  id: 2,\n  message: \"Appointment canceled by Bob Johnson.\",\n  type: \"warning\"\n}, {\n  id: 3,\n  message: \"Michael Brown's follow-up scheduled.\",\n  type: \"info\"\n}, {\n  id: 4,\n  message: \"Emma Wilson's lab results are ready.\",\n  type: \"info\"\n}, {\n  id: 5,\n  message: \"Pending report for David Lee.\",\n  type: \"warning\"\n}];\nconst COLORS = [\"#4CAF50\", \"#FF9800\", \"#F44336\", \"#2196F3\"];\n\n// ----------------- Helper -----------------\nconst badgeVariant = status => {\n  if (status === \"Confirmed\" || status === \"info\") return \"primary\";\n  if (status === \"Pending\" || status === \"warning\") return \"warning\";\n  if (status === \"Completed\") return \"success\";\n  return \"secondary\";\n};\n\n// ----------------- Dashboard Component -----------------\nexport default function DoctorDashboard() {\n  _s();\n  const [doctor, setDoctor] = useState(null);\n  const [appointments, setAppointments] = useState([]);\n  const [patients] = useState(mockPatients);\n  const [notifications, setNotifications] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filterStatus, setFilterStatus] = useState(\"\");\n  useEffect(() => {\n    // load mock\n    setDoctor(mockDoctor);\n    setAppointments(mockAppointments);\n    setNotifications(mockNotifications);\n  }, []);\n\n  // derived stats — memoized\n  const stats = useMemo(() => {\n    const todayAppointments = appointments.length;\n    const totalPatients = patients.length;\n    const pendingReports = appointments.filter(a => a.status === \"Pending\").length;\n    const criticalPatients = patients.filter(p => p.status === \"critical\").length;\n    return {\n      todayAppointments,\n      totalPatients,\n      pendingReports,\n      criticalPatients\n    };\n  }, [appointments, patients]);\n\n  // appointment chart data\n  const appointmentChartData = useMemo(() => {\n    const statuses = [\"Confirmed\", \"Pending\", \"Completed\"];\n    return statuses.map(s => ({\n      status: s,\n      count: appointments.filter(a => a.status === s).length\n    }));\n  }, [appointments]);\n\n  // patients by status for pie chart\n  const patientsByStatus = useMemo(() => {\n    const groups = {};\n    patients.forEach(p => groups[p.status] = (groups[p.status] || 0) + 1);\n    return Object.keys(groups).map((k, i) => ({\n      name: k,\n      value: groups[k],\n      color: COLORS[i % COLORS.length]\n    }));\n  }, [patients]);\n  const filteredPatients = patients.filter(p => {\n    const nameMatch = p.name.toLowerCase().includes(searchTerm.toLowerCase());\n    const statusMatch = filterStatus ? p.status === filterStatus : true;\n    return nameMatch && statusMatch;\n  });\n  const handleMarkNotification = id => setNotifications(prev => prev.filter(n => n.id !== id));\n\n  // quick actions (mock) — example: generate summary or export\n  const handleQuickAction = action => {\n    if (action === \"summary\") {\n      alert(`Daily summary:\\nAppointments: ${stats.todayAppointments}\\nPatients: ${stats.totalPatients}`);\n    }\n    if (action === \"export\") {\n      // simple CSV export of today's appointments (mock)\n      const csv = [\"patientName,time,status\", ...appointments.map(a => `${a.patientName},${a.time},${a.status}`)].join(\"\\n\");\n      const blob = new Blob([csv], {\n        type: \"text/csv\"\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `appointments_${new Date().toISOString().slice(0, 10)}.csv`;\n      a.click();\n      URL.revokeObjectURL(url);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-3 align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Doctor Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: \"Summary & quick insights \\u2014 non-repetitive overview.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"text-end\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          className: \"me-2\",\n          onClick: () => handleQuickAction(\"summary\"),\n          children: \"Generate Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-success\",\n          onClick: () => handleQuickAction(\"export\"),\n          children: \"Export Appointments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), doctor && /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4 shadow-sm\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"d-flex flex-wrap justify-content-between align-items-center gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-0\",\n            children: [\"Dr. \", doctor.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-muted\",\n            children: [doctor.specialization, \" \\u2022 \", doctor.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-center p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-primary\",\n              children: /*#__PURE__*/_jsxDEV(CalendarCheckFill, {\n                size: 28\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2\",\n              children: \"Today's Appointments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"mb-0\",\n              children: stats.todayAppointments\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-center p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-success\",\n              children: /*#__PURE__*/_jsxDEV(PersonFill, {\n                size: 28\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2\",\n              children: \"Total Patients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"mb-0\",\n              children: stats.totalPatients\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-center p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-warning\",\n              children: /*#__PURE__*/_jsxDEV(FileTextFill, {\n                size: 28\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2\",\n              children: \"Pending Reports\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"mb-0\",\n              children: stats.pendingReports\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-center p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-danger\",\n              children: \"\\u26A0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2\",\n              children: \"Critical Patients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"mb-0\",\n              children: stats.criticalPatients\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"h-100 shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"Next Appointments (Quick)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: appointments.slice(0, 6).map(appt => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: appt.patientName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-muted small\",\n                  children: appt.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                bg: badgeVariant(appt.status),\n                children: appt.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this)]\n            }, appt.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 12,\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"h-100 shadow-sm p-3\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Appointments by Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: \"100%\",\n                  height: 220\n                },\n                children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                  children: /*#__PURE__*/_jsxDEV(BarChart, {\n                    data: appointmentChartData,\n                    margin: {\n                      top: 10,\n                      right: 10,\n                      left: 0,\n                      bottom: 0\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                      strokeDasharray: \"3 3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                      dataKey: \"status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                      allowDecimals: false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                      dataKey: \"count\",\n                      fill: \"#8884d8\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"h-100 shadow-sm p-3\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Patients by Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: \"100%\",\n                  height: 200\n                },\n                children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                  children: /*#__PURE__*/_jsxDEV(PieChart, {\n                    children: [/*#__PURE__*/_jsxDEV(Pie, {\n                      data: patientsByStatus,\n                      dataKey: \"value\",\n                      nameKey: \"name\",\n                      cx: \"50%\",\n                      cy: \"50%\",\n                      outerRadius: 70,\n                      label: true,\n                      children: patientsByStatus.map((entry, idx) => /*#__PURE__*/_jsxDEV(Cell, {\n                        fill: entry.color\n                      }, `cell-${idx}`, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 27\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4 shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"Recent Patients (Compact)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          xs: 1,\n          md: 2,\n          lg: 3,\n          className: \"g-3\",\n          children: filteredPatients.slice(0, 6).map(p => /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"h-100\",\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: p.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n                  className: \"mb-2 text-muted\",\n                  children: [p.gender, \" \\u2022 \", p.bloodType]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2 small text-muted\",\n                  children: [\"Age: \", p.age]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    size: \"sm\",\n                    variant: \"outline-primary\",\n                    children: \"Open\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"sm\",\n                    variant: \"outline-secondary\",\n                    children: \"Notes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"sm\",\n                    variant: \"outline-danger\",\n                    children: \"Flag\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4 shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: notifications.length > 0 ? notifications.map(note => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          className: \"d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Badge, {\n              bg: badgeVariant(note.type),\n              className: \"me-2\",\n              children: note.type.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this), note.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            variant: \"outline-secondary\",\n            onClick: () => handleMarkNotification(note.id),\n            children: \"Mark as read\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this)]\n        }, note.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: \"No new notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorDashboard, \"2rgt0YgAByKMH/CYUl1/RxL8gr4=\");\n_c = DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","Container","Row","Col","Card","ListGroup","Badge","Button","Accordion","Form","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","PieChart","Pie","Cell","ResponsiveContainer","Legend","PersonFill","CalendarCheckFill","FileTextFill","jsxDEV","_jsxDEV","mockDoctor","id","name","specialization","email","mockAppointments","patientName","time","status","mockPatients","age","gender","bloodType","mockNotifications","message","type","COLORS","badgeVariant","DoctorDashboard","_s","doctor","setDoctor","appointments","setAppointments","patients","notifications","setNotifications","searchTerm","setSearchTerm","filterStatus","setFilterStatus","stats","todayAppointments","length","totalPatients","pendingReports","filter","a","criticalPatients","p","appointmentChartData","statuses","map","s","count","patientsByStatus","groups","forEach","Object","keys","k","i","value","color","filteredPatients","nameMatch","toLowerCase","includes","statusMatch","handleMarkNotification","prev","n","handleQuickAction","action","alert","csv","join","blob","Blob","url","URL","createObjectURL","document","createElement","href","download","Date","toISOString","slice","click","revokeObjectURL","fluid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","Body","size","lg","Header","appt","Item","bg","md","Title","style","width","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","allowDecimals","fill","nameKey","cx","cy","outerRadius","label","entry","idx","xs","Subtitle","note","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/rauna/OneDrive/Desktop/v1.0/staff-portal/src/pages/DoctorMain/DoctorDashboard.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  ListGroup,\n  Badge,\n  Button,\n  Accordion,\n  Form,\n} from \"react-bootstrap\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  PieChart,\n  Pie,\n  Cell,\n  ResponsiveContainer,\n  Legend,\n} from \"recharts\";\nimport { PersonFill, CalendarCheckFill, FileTextFill } from \"react-bootstrap-icons\";\n\n// ----------------- Mock Data -----------------\nconst mockDoctor = {\n  id: \"123\",\n  name: \"John Doe\",\n  specialization: \"Cardiology\",\n  email: \"john.doe@example.com\",\n};\n\n// compact appointments (dashboard shows a short summary only)\nconst mockAppointments = [\n  { id: 1, patientName: \"Alice Smith\", time: \"09:00 AM\", status: \"Confirmed\" },\n  { id: 2, patientName: \"Bob Johnson\", time: \"09:30 AM\", status: \"Pending\" },\n  { id: 3, patientName: \"Michael Brown\", time: \"10:00 AM\", status: \"Completed\" },\n  { id: 4, patientName: \"Emma Wilson\", time: \"10:30 AM\", status: \"Confirmed\" },\n  { id: 5, patientName: \"David Lee\", time: \"11:00 AM\", status: \"Pending\" },\n  { id: 6, patientName: \"Sophia Taylor\", time: \"11:30 AM\", status: \"Confirmed\" },\n  { id: 7, patientName: \"James Anderson\", time: \"01:00 PM\", status: \"Completed\" },\n  { id: 8, patientName: \"Olivia Martinez\", time: \"01:30 PM\", status: \"Confirmed\" },\n  { id: 9, patientName: \"William Clark\", time: \"02:00 PM\", status: \"Pending\" },\n  { id: 10, patientName: \"Isabella Lewis\", time: \"02:30 PM\", status: \"Confirmed\" },\n];\n\n// Patients (we will not repeat full profiles — just quick cards and a critical list)\nconst mockPatients = [\n  { id: \"p1\", name: \"Alice Smith\", age: 35, gender: \"F\", bloodType: \"A+\", status: \"active\" },\n  { id: \"p2\", name: \"John Doe\", age: 40, gender: \"M\", bloodType: \"B+\", status: \"active\" },\n  { id: \"p3\", name: \"Michael Brown\", age: 47, gender: \"M\", bloodType: \"O-\", status: \"critical\" },\n  { id: \"p4\", name: \"Emma Wilson\", age: 30, gender: \"F\", bloodType: \"AB+\", status: \"active\" },\n  { id: \"p5\", name: \"David Lee\", age: 36, gender: \"M\", bloodType: \"B-\", status: \"active\" },\n  { id: \"p6\", name: \"Sophia Taylor\", age: 33, gender: \"F\", bloodType: \"O+\", status: \"active\" },\n  { id: \"p7\", name: \"James Anderson\", age: 45, gender: \"M\", bloodType: \"A-\", status: \"critical\" },\n  { id: \"p8\", name: \"Olivia Martinez\", age: 27, gender: \"F\", bloodType: \"AB-\", status: \"active\" },\n  { id: \"p9\", name: \"William Clark\", age: 50, gender: \"M\", bloodType: \"B+\", status: \"inactive\" },\n  { id: \"p10\", name: \"Isabella Lewis\", age: 31, gender: \"F\", bloodType: \"A+\", status: \"active\" },\n];\n\nconst mockNotifications = [\n  { id: 1, message: \"New lab report submitted for Alice Smith.\", type: \"info\" },\n  { id: 2, message: \"Appointment canceled by Bob Johnson.\", type: \"warning\" },\n  { id: 3, message: \"Michael Brown's follow-up scheduled.\", type: \"info\" },\n  { id: 4, message: \"Emma Wilson's lab results are ready.\", type: \"info\" },\n  { id: 5, message: \"Pending report for David Lee.\", type: \"warning\" },\n];\n\nconst COLORS = [\"#4CAF50\", \"#FF9800\", \"#F44336\", \"#2196F3\"];\n\n// ----------------- Helper -----------------\nconst badgeVariant = (status) => {\n  if (status === \"Confirmed\" || status === \"info\") return \"primary\";\n  if (status === \"Pending\" || status === \"warning\") return \"warning\";\n  if (status === \"Completed\") return \"success\";\n  return \"secondary\";\n};\n\n// ----------------- Dashboard Component -----------------\nexport default function DoctorDashboard() {\n  const [doctor, setDoctor] = useState(null);\n  const [appointments, setAppointments] = useState([]);\n  const [patients] = useState(mockPatients);\n  const [notifications, setNotifications] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filterStatus, setFilterStatus] = useState(\"\");\n\n  useEffect(() => {\n    // load mock\n    setDoctor(mockDoctor);\n    setAppointments(mockAppointments);\n    setNotifications(mockNotifications);\n  }, []);\n\n  // derived stats — memoized\n  const stats = useMemo(() => {\n    const todayAppointments = appointments.length;\n    const totalPatients = patients.length;\n    const pendingReports = appointments.filter((a) => a.status === \"Pending\").length;\n    const criticalPatients = patients.filter((p) => p.status === \"critical\").length;\n    return { todayAppointments, totalPatients, pendingReports, criticalPatients };\n  }, [appointments, patients]);\n\n  // appointment chart data\n  const appointmentChartData = useMemo(() => {\n    const statuses = [\"Confirmed\", \"Pending\", \"Completed\"];\n    return statuses.map((s) => ({ status: s, count: appointments.filter((a) => a.status === s).length }));\n  }, [appointments]);\n\n  // patients by status for pie chart\n  const patientsByStatus = useMemo(() => {\n    const groups = {};\n    patients.forEach((p) => (groups[p.status] = (groups[p.status] || 0) + 1));\n    return Object.keys(groups).map((k, i) => ({ name: k, value: groups[k], color: COLORS[i % COLORS.length] }));\n  }, [patients]);\n\n  const filteredPatients = patients.filter((p) => {\n    const nameMatch = p.name.toLowerCase().includes(searchTerm.toLowerCase());\n    const statusMatch = filterStatus ? p.status === filterStatus : true;\n    return nameMatch && statusMatch;\n  });\n\n  const handleMarkNotification = (id) => setNotifications((prev) => prev.filter((n) => n.id !== id));\n\n  // quick actions (mock) — example: generate summary or export\n  const handleQuickAction = (action) => {\n    if (action === \"summary\") {\n      alert(`Daily summary:\\nAppointments: ${stats.todayAppointments}\\nPatients: ${stats.totalPatients}`);\n    }\n    if (action === \"export\") {\n      // simple CSV export of today's appointments (mock)\n      const csv = [\"patientName,time,status\", ...appointments.map(a => `${a.patientName},${a.time},${a.status}`)].join(\"\\n\");\n      const blob = new Blob([csv], { type: \"text/csv\" });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `appointments_${new Date().toISOString().slice(0,10)}.csv`;\n      a.click();\n      URL.revokeObjectURL(url);\n    }\n  };\n\n  return (\n    <Container fluid className=\"mt-4\">\n      <Row className=\"mb-3 align-items-center\">\n        <Col>\n          <h2>Doctor Dashboard</h2>\n          <p className=\"text-muted\">Summary & quick insights — non-repetitive overview.</p>\n        </Col>\n        <Col className=\"text-end\">\n          <Button variant=\"outline-primary\" className=\"me-2\" onClick={() => handleQuickAction(\"summary\")}>Generate Summary</Button>\n          <Button variant=\"outline-success\" onClick={() => handleQuickAction(\"export\")}>Export Appointments</Button>\n        </Col>\n      </Row>\n\n      {/* top stats */}\n      {doctor && (\n        <Card className=\"mb-4 shadow-sm\">\n          <Card.Body className=\"d-flex flex-wrap justify-content-between align-items-center gap-3\">\n            <div>\n              <h5 className=\"mb-0\">Dr. {doctor.name}</h5>\n              <small className=\"text-muted\">{doctor.specialization} • {doctor.email}</small>\n            </div>\n\n            <div className=\"d-flex gap-3\">\n              <Card className=\"text-center p-3\">\n                <div className=\"text-primary\"><CalendarCheckFill size={28} /></div>\n                <div className=\"mt-2\">Today's Appointments</div>\n                <h3 className=\"mb-0\">{stats.todayAppointments}</h3>\n              </Card>\n\n              <Card className=\"text-center p-3\">\n                <div className=\"text-success\"><PersonFill size={28} /></div>\n                <div className=\"mt-2\">Total Patients</div>\n                <h3 className=\"mb-0\">{stats.totalPatients}</h3>\n              </Card>\n\n              <Card className=\"text-center p-3\">\n                <div className=\"text-warning\"><FileTextFill size={28} /></div>\n                <div className=\"mt-2\">Pending Reports</div>\n                <h3 className=\"mb-0\">{stats.pendingReports}</h3>\n              </Card>\n\n              <Card className=\"text-center p-3\">\n                <div className=\"text-danger\">⚠</div>\n                <div className=\"mt-2\">Critical Patients</div>\n                <h3 className=\"mb-0\">{stats.criticalPatients}</h3>\n              </Card>\n            </div>\n          </Card.Body>\n        </Card>\n      )}\n\n      <Row>\n        {/* Appointments mini list */}\n        <Col lg={6} className=\"mb-4\">\n          <Card className=\"h-100 shadow-sm\">\n            <Card.Header>Next Appointments (Quick)</Card.Header>\n            <ListGroup variant=\"flush\">\n              {appointments.slice(0, 6).map((appt) => (\n                <ListGroup.Item key={appt.id} className=\"d-flex justify-content-between align-items-center\">\n                  <div>\n                    <strong>{appt.patientName}</strong>\n                    <div className=\"text-muted small\">{appt.time}</div>\n                  </div>\n                  <Badge bg={badgeVariant(appt.status)}>{appt.status}</Badge>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Card>\n        </Col>\n\n        {/* Charts */}\n        <Col lg={6} className=\"mb-4\">\n          <Row>\n            <Col md={12} className=\"mb-3\">\n              <Card className=\"h-100 shadow-sm p-3\">\n                <Card.Title>Appointments by Status</Card.Title>\n                <div style={{ width: \"100%\", height: 220 }}>\n                  <ResponsiveContainer>\n                    <BarChart data={appointmentChartData} margin={{ top: 10, right: 10, left: 0, bottom: 0 }}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"status\" />\n                      <YAxis allowDecimals={false} />\n                      <Tooltip />\n                      <Bar dataKey=\"count\" fill=\"#8884d8\" />\n                    </BarChart>\n                  </ResponsiveContainer>\n                </div>\n              </Card>\n            </Col>\n\n            <Col md={12}>\n              <Card className=\"h-100 shadow-sm p-3\">\n                <Card.Title>Patients by Status</Card.Title>\n                <div style={{ width: \"100%\", height: 200 }}>\n                  <ResponsiveContainer>\n                    <PieChart>\n                      <Pie data={patientsByStatus} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={70} label>\n                        {patientsByStatus.map((entry, idx) => (\n                          <Cell key={`cell-${idx}`} fill={entry.color} />\n                        ))}\n                      </Pie>\n                      <Tooltip />\n                      <Legend />\n                    </PieChart>\n                  </ResponsiveContainer>\n                </div>\n              </Card>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n\n      {/* Recent patients cards (compact) */}\n      <Card className=\"mb-4 shadow-sm\">\n        <Card.Header>Recent Patients (Compact)</Card.Header>\n        <Card.Body>\n          <Row xs={1} md={2} lg={3} className=\"g-3\">\n            {filteredPatients.slice(0, 6).map((p) => (\n              <Col key={p.id}>\n                <Card className=\"h-100\">\n                  <Card.Body>\n                    <Card.Title>{p.name}</Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted\">{p.gender} • {p.bloodType}</Card.Subtitle>\n                    <div className=\"mb-2 small text-muted\">Age: {p.age}</div>\n\n                    <div className=\"d-flex gap-2\">\n                      <Button size=\"sm\" variant=\"outline-primary\">Open</Button>\n                      <Button size=\"sm\" variant=\"outline-secondary\">Notes</Button>\n                      <Button size=\"sm\" variant=\"outline-danger\">Flag</Button>\n                    </div>\n                  </Card.Body>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Card.Body>\n      </Card>\n\n      {/* Notifications */}\n      <Card className=\"mb-4 shadow-sm\">\n        <Card.Header>Notifications</Card.Header>\n        <ListGroup variant=\"flush\">\n          {notifications.length > 0 ? (\n            notifications.map((note) => (\n              <ListGroup.Item key={note.id} className=\"d-flex justify-content-between align-items-center\">\n                <div>\n                  <Badge bg={badgeVariant(note.type)} className=\"me-2\">{note.type.toUpperCase()}</Badge>\n                  {note.message}\n                </div>\n                <Button size=\"sm\" variant=\"outline-secondary\" onClick={() => handleMarkNotification(note.id)}>Mark as read</Button>\n              </ListGroup.Item>\n            ))\n          ) : (\n            <ListGroup.Item>No new notifications</ListGroup.Item>\n          )}\n        </ListGroup>\n      </Card>\n\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}