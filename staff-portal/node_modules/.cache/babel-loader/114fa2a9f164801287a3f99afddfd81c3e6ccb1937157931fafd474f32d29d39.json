{"ast":null,"code":"import React,{useEffect,useMemo,useState}from\"react\";import{Container,Row,Col,Card,ListGroup,Badge,Button,Accordion,Form}from\"react-bootstrap\";import{BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,PieChart,Pie,Cell,ResponsiveContainer,Legend}from\"recharts\";import{PersonFill,CalendarCheckFill,FileTextFill}from\"react-bootstrap-icons\";// ----------------- Mock Data -----------------\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const mockDoctor={id:\"123\",name:\"John Doe\",specialization:\"Cardiology\",email:\"john.doe@example.com\"};// compact appointments (dashboard shows a short summary only)\nconst mockAppointments=[{id:1,patientName:\"Alice Smith\",time:\"09:00 AM\",status:\"Confirmed\"},{id:2,patientName:\"Bob Johnson\",time:\"09:30 AM\",status:\"Pending\"},{id:3,patientName:\"Michael Brown\",time:\"10:00 AM\",status:\"Completed\"},{id:4,patientName:\"Emma Wilson\",time:\"10:30 AM\",status:\"Confirmed\"},{id:5,patientName:\"David Lee\",time:\"11:00 AM\",status:\"Pending\"},{id:6,patientName:\"Sophia Taylor\",time:\"11:30 AM\",status:\"Confirmed\"},{id:7,patientName:\"James Anderson\",time:\"01:00 PM\",status:\"Completed\"},{id:8,patientName:\"Olivia Martinez\",time:\"01:30 PM\",status:\"Confirmed\"},{id:9,patientName:\"William Clark\",time:\"02:00 PM\",status:\"Pending\"},{id:10,patientName:\"Isabella Lewis\",time:\"02:30 PM\",status:\"Confirmed\"}];// Patients (we will not repeat full profiles — just quick cards and a critical list)\nconst mockPatients=[{id:\"p1\",name:\"Alice Smith\",age:35,gender:\"F\",bloodType:\"A+\",status:\"active\"},{id:\"p2\",name:\"John Doe\",age:40,gender:\"M\",bloodType:\"B+\",status:\"active\"},{id:\"p3\",name:\"Michael Brown\",age:47,gender:\"M\",bloodType:\"O-\",status:\"critical\"},{id:\"p4\",name:\"Emma Wilson\",age:30,gender:\"F\",bloodType:\"AB+\",status:\"active\"},{id:\"p5\",name:\"David Lee\",age:36,gender:\"M\",bloodType:\"B-\",status:\"active\"},{id:\"p6\",name:\"Sophia Taylor\",age:33,gender:\"F\",bloodType:\"O+\",status:\"active\"},{id:\"p7\",name:\"James Anderson\",age:45,gender:\"M\",bloodType:\"A-\",status:\"critical\"},{id:\"p8\",name:\"Olivia Martinez\",age:27,gender:\"F\",bloodType:\"AB-\",status:\"active\"},{id:\"p9\",name:\"William Clark\",age:50,gender:\"M\",bloodType:\"B+\",status:\"inactive\"},{id:\"p10\",name:\"Isabella Lewis\",age:31,gender:\"F\",bloodType:\"A+\",status:\"active\"}];const mockNotifications=[{id:1,message:\"New lab report submitted for Alice Smith.\",type:\"info\"},{id:2,message:\"Appointment canceled by Bob Johnson.\",type:\"warning\"},{id:3,message:\"Michael Brown's follow-up scheduled.\",type:\"info\"},{id:4,message:\"Emma Wilson's lab results are ready.\",type:\"info\"},{id:5,message:\"Pending report for David Lee.\",type:\"warning\"}];const COLORS=[\"#4CAF50\",\"#FF9800\",\"#F44336\",\"#2196F3\"];// ----------------- Helper -----------------\nconst badgeVariant=status=>{if(status===\"Confirmed\"||status===\"info\")return\"primary\";if(status===\"Pending\"||status===\"warning\")return\"warning\";if(status===\"Completed\")return\"success\";return\"secondary\";};// ----------------- Dashboard Component -----------------\nexport default function DoctorDashboard(){const[doctor,setDoctor]=useState(null);const[appointments,setAppointments]=useState([]);const[patients]=useState(mockPatients);const[notifications,setNotifications]=useState([]);const[searchTerm,setSearchTerm]=useState(\"\");const[filterStatus,setFilterStatus]=useState(\"\");useEffect(()=>{// load mock\nsetDoctor(mockDoctor);setAppointments(mockAppointments);setNotifications(mockNotifications);},[]);// derived stats — memoized\nconst stats=useMemo(()=>{const todayAppointments=appointments.length;const totalPatients=patients.length;const pendingReports=appointments.filter(a=>a.status===\"Pending\").length;const criticalPatients=patients.filter(p=>p.status===\"critical\").length;return{todayAppointments,totalPatients,pendingReports,criticalPatients};},[appointments,patients]);// appointment chart data\nconst appointmentChartData=useMemo(()=>{const statuses=[\"Confirmed\",\"Pending\",\"Completed\"];return statuses.map(s=>({status:s,count:appointments.filter(a=>a.status===s).length}));},[appointments]);// patients by status for pie chart\nconst patientsByStatus=useMemo(()=>{const groups={};patients.forEach(p=>groups[p.status]=(groups[p.status]||0)+1);return Object.keys(groups).map((k,i)=>({name:k,value:groups[k],color:COLORS[i%COLORS.length]}));},[patients]);const filteredPatients=patients.filter(p=>{const nameMatch=p.name.toLowerCase().includes(searchTerm.toLowerCase());const statusMatch=filterStatus?p.status===filterStatus:true;return nameMatch&&statusMatch;});const handleMarkNotification=id=>setNotifications(prev=>prev.filter(n=>n.id!==id));// quick actions (mock) — example: generate summary or export\nconst handleQuickAction=action=>{if(action===\"summary\"){alert(\"Daily summary:\\nAppointments: \".concat(stats.todayAppointments,\"\\nPatients: \").concat(stats.totalPatients));}if(action===\"export\"){// simple CSV export of today's appointments (mock)\nconst csv=[\"patientName,time,status\",...appointments.map(a=>\"\".concat(a.patientName,\",\").concat(a.time,\",\").concat(a.status))].join(\"\\n\");const blob=new Blob([csv],{type:\"text/csv\"});const url=URL.createObjectURL(blob);const a=document.createElement(\"a\");a.href=url;a.download=\"appointments_\".concat(new Date().toISOString().slice(0,10),\".csv\");a.click();URL.revokeObjectURL(url);}};return/*#__PURE__*/_jsxs(Container,{fluid:true,className:\"mt-4\",children:[/*#__PURE__*/_jsxs(Row,{className:\"mb-3 align-items-center\",children:[/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Doctor Dashboard\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"Summary & quick insights \\u2014 non-repetitive overview.\"})]}),/*#__PURE__*/_jsxs(Col,{className:\"text-end\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outline-primary\",className:\"me-2\",onClick:()=>handleQuickAction(\"summary\"),children:\"Generate Summary\"}),/*#__PURE__*/_jsx(Button,{variant:\"outline-success\",onClick:()=>handleQuickAction(\"export\"),children:\"Export Appointments\"})]})]}),doctor&&/*#__PURE__*/_jsx(Card,{className:\"mb-4 shadow-sm\",children:/*#__PURE__*/_jsxs(Card.Body,{className:\"d-flex flex-wrap justify-content-between align-items-center gap-3\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h5\",{className:\"mb-0\",children:[\"Dr. \",doctor.name]}),/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted\",children:[doctor.specialization,\" \\u2022 \",doctor.email]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-3\",children:[/*#__PURE__*/_jsxs(Card,{className:\"text-center p-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-primary\",children:/*#__PURE__*/_jsx(CalendarCheckFill,{size:28})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:\"Today's Appointments\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"mb-0\",children:stats.todayAppointments})]}),/*#__PURE__*/_jsxs(Card,{className:\"text-center p-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-success\",children:/*#__PURE__*/_jsx(PersonFill,{size:28})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:\"Total Patients\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"mb-0\",children:stats.totalPatients})]}),/*#__PURE__*/_jsxs(Card,{className:\"text-center p-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-warning\",children:/*#__PURE__*/_jsx(FileTextFill,{size:28})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:\"Pending Reports\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"mb-0\",children:stats.pendingReports})]}),/*#__PURE__*/_jsxs(Card,{className:\"text-center p-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-danger\",children:\"\\u26A0\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:\"Critical Patients\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"mb-0\",children:stats.criticalPatients})]})]})]})}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{lg:6,className:\"mb-4\",children:/*#__PURE__*/_jsxs(Card,{className:\"h-100 shadow-sm\",children:[/*#__PURE__*/_jsx(Card.Header,{children:\"Next Appointments (Quick)\"}),/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:appointments.slice(0,6).map(appt=>/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:appt.patientName}),/*#__PURE__*/_jsx(\"div\",{className:\"text-muted small\",children:appt.time})]}),/*#__PURE__*/_jsx(Badge,{bg:badgeVariant(appt.status),children:appt.status})]},appt.id))})]})}),/*#__PURE__*/_jsx(Col,{lg:6,className:\"mb-4\",children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:12,className:\"mb-3\",children:/*#__PURE__*/_jsxs(Card,{className:\"h-100 shadow-sm p-3\",children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Appointments by Status\"}),/*#__PURE__*/_jsx(\"div\",{style:{width:\"100%\",height:220},children:/*#__PURE__*/_jsx(ResponsiveContainer,{children:/*#__PURE__*/_jsxs(BarChart,{data:appointmentChartData,margin:{top:10,right:10,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"status\"}),/*#__PURE__*/_jsx(YAxis,{allowDecimals:false}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"count\",fill:\"#8884d8\"})]})})})]})}),/*#__PURE__*/_jsx(Col,{md:12,children:/*#__PURE__*/_jsxs(Card,{className:\"h-100 shadow-sm p-3\",children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Patients by Status\"}),/*#__PURE__*/_jsx(\"div\",{style:{width:\"100%\",height:200},children:/*#__PURE__*/_jsx(ResponsiveContainer,{children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:patientsByStatus,dataKey:\"value\",nameKey:\"name\",cx:\"50%\",cy:\"50%\",outerRadius:70,label:true,children:patientsByStatus.map((entry,idx)=>/*#__PURE__*/_jsx(Cell,{fill:entry.color},\"cell-\".concat(idx)))}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{})]})})})]})})]})})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-4 shadow-sm\",children:[/*#__PURE__*/_jsx(Card.Header,{children:\"Recent Patients (Compact)\"}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(Row,{xs:1,md:2,lg:3,className:\"g-3\",children:filteredPatients.slice(0,6).map(p=>/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Card,{className:\"h-100\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:p.name}),/*#__PURE__*/_jsxs(Card.Subtitle,{className:\"mb-2 text-muted\",children:[p.gender,\" \\u2022 \",p.bloodType]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2 small text-muted\",children:[\"Age: \",p.age]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-2\",children:[/*#__PURE__*/_jsx(Button,{size:\"sm\",variant:\"outline-primary\",children:\"Open\"}),/*#__PURE__*/_jsx(Button,{size:\"sm\",variant:\"outline-secondary\",children:\"Notes\"}),/*#__PURE__*/_jsx(Button,{size:\"sm\",variant:\"outline-danger\",children:\"Flag\"})]})]})})},p.id))})})]}),/*#__PURE__*/_jsxs(Card,{className:\"mb-4 shadow-sm\",children:[/*#__PURE__*/_jsx(Card.Header,{children:\"Notifications\"}),/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:notifications.length>0?notifications.map(note=>/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Badge,{bg:badgeVariant(note.type),className:\"me-2\",children:note.type.toUpperCase()}),note.message]}),/*#__PURE__*/_jsx(Button,{size:\"sm\",variant:\"outline-secondary\",onClick:()=>handleMarkNotification(note.id),children:\"Mark as read\"})]},note.id)):/*#__PURE__*/_jsx(ListGroup.Item,{children:\"No new notifications\"})})]})]});}","map":{"version":3,"names":["React","useEffect","useMemo","useState","Container","Row","Col","Card","ListGroup","Badge","Button","Accordion","Form","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","PieChart","Pie","Cell","ResponsiveContainer","Legend","PersonFill","CalendarCheckFill","FileTextFill","jsx","_jsx","jsxs","_jsxs","mockDoctor","id","name","specialization","email","mockAppointments","patientName","time","status","mockPatients","age","gender","bloodType","mockNotifications","message","type","COLORS","badgeVariant","DoctorDashboard","doctor","setDoctor","appointments","setAppointments","patients","notifications","setNotifications","searchTerm","setSearchTerm","filterStatus","setFilterStatus","stats","todayAppointments","length","totalPatients","pendingReports","filter","a","criticalPatients","p","appointmentChartData","statuses","map","s","count","patientsByStatus","groups","forEach","Object","keys","k","i","value","color","filteredPatients","nameMatch","toLowerCase","includes","statusMatch","handleMarkNotification","prev","n","handleQuickAction","action","alert","concat","csv","join","blob","Blob","url","URL","createObjectURL","document","createElement","href","download","Date","toISOString","slice","click","revokeObjectURL","fluid","className","children","variant","onClick","Body","size","lg","Header","appt","Item","bg","md","Title","style","width","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","allowDecimals","fill","nameKey","cx","cy","outerRadius","label","entry","idx","xs","Subtitle","note","toUpperCase"],"sources":["C:/Users/rauna/OneDrive/Desktop/v1.0/staff-portal/src/pages/DoctorMain/DoctorDashboard.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  ListGroup,\n  Badge,\n  Button,\n  Accordion,\n  Form,\n} from \"react-bootstrap\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  PieChart,\n  Pie,\n  Cell,\n  ResponsiveContainer,\n  Legend,\n} from \"recharts\";\nimport { PersonFill, CalendarCheckFill, FileTextFill } from \"react-bootstrap-icons\";\n\n// ----------------- Mock Data -----------------\nconst mockDoctor = {\n  id: \"123\",\n  name: \"John Doe\",\n  specialization: \"Cardiology\",\n  email: \"john.doe@example.com\",\n};\n\n// compact appointments (dashboard shows a short summary only)\nconst mockAppointments = [\n  { id: 1, patientName: \"Alice Smith\", time: \"09:00 AM\", status: \"Confirmed\" },\n  { id: 2, patientName: \"Bob Johnson\", time: \"09:30 AM\", status: \"Pending\" },\n  { id: 3, patientName: \"Michael Brown\", time: \"10:00 AM\", status: \"Completed\" },\n  { id: 4, patientName: \"Emma Wilson\", time: \"10:30 AM\", status: \"Confirmed\" },\n  { id: 5, patientName: \"David Lee\", time: \"11:00 AM\", status: \"Pending\" },\n  { id: 6, patientName: \"Sophia Taylor\", time: \"11:30 AM\", status: \"Confirmed\" },\n  { id: 7, patientName: \"James Anderson\", time: \"01:00 PM\", status: \"Completed\" },\n  { id: 8, patientName: \"Olivia Martinez\", time: \"01:30 PM\", status: \"Confirmed\" },\n  { id: 9, patientName: \"William Clark\", time: \"02:00 PM\", status: \"Pending\" },\n  { id: 10, patientName: \"Isabella Lewis\", time: \"02:30 PM\", status: \"Confirmed\" },\n];\n\n// Patients (we will not repeat full profiles — just quick cards and a critical list)\nconst mockPatients = [\n  { id: \"p1\", name: \"Alice Smith\", age: 35, gender: \"F\", bloodType: \"A+\", status: \"active\" },\n  { id: \"p2\", name: \"John Doe\", age: 40, gender: \"M\", bloodType: \"B+\", status: \"active\" },\n  { id: \"p3\", name: \"Michael Brown\", age: 47, gender: \"M\", bloodType: \"O-\", status: \"critical\" },\n  { id: \"p4\", name: \"Emma Wilson\", age: 30, gender: \"F\", bloodType: \"AB+\", status: \"active\" },\n  { id: \"p5\", name: \"David Lee\", age: 36, gender: \"M\", bloodType: \"B-\", status: \"active\" },\n  { id: \"p6\", name: \"Sophia Taylor\", age: 33, gender: \"F\", bloodType: \"O+\", status: \"active\" },\n  { id: \"p7\", name: \"James Anderson\", age: 45, gender: \"M\", bloodType: \"A-\", status: \"critical\" },\n  { id: \"p8\", name: \"Olivia Martinez\", age: 27, gender: \"F\", bloodType: \"AB-\", status: \"active\" },\n  { id: \"p9\", name: \"William Clark\", age: 50, gender: \"M\", bloodType: \"B+\", status: \"inactive\" },\n  { id: \"p10\", name: \"Isabella Lewis\", age: 31, gender: \"F\", bloodType: \"A+\", status: \"active\" },\n];\n\nconst mockNotifications = [\n  { id: 1, message: \"New lab report submitted for Alice Smith.\", type: \"info\" },\n  { id: 2, message: \"Appointment canceled by Bob Johnson.\", type: \"warning\" },\n  { id: 3, message: \"Michael Brown's follow-up scheduled.\", type: \"info\" },\n  { id: 4, message: \"Emma Wilson's lab results are ready.\", type: \"info\" },\n  { id: 5, message: \"Pending report for David Lee.\", type: \"warning\" },\n];\n\nconst COLORS = [\"#4CAF50\", \"#FF9800\", \"#F44336\", \"#2196F3\"];\n\n// ----------------- Helper -----------------\nconst badgeVariant = (status) => {\n  if (status === \"Confirmed\" || status === \"info\") return \"primary\";\n  if (status === \"Pending\" || status === \"warning\") return \"warning\";\n  if (status === \"Completed\") return \"success\";\n  return \"secondary\";\n};\n\n// ----------------- Dashboard Component -----------------\nexport default function DoctorDashboard() {\n  const [doctor, setDoctor] = useState(null);\n  const [appointments, setAppointments] = useState([]);\n  const [patients] = useState(mockPatients);\n  const [notifications, setNotifications] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filterStatus, setFilterStatus] = useState(\"\");\n\n  useEffect(() => {\n    // load mock\n    setDoctor(mockDoctor);\n    setAppointments(mockAppointments);\n    setNotifications(mockNotifications);\n  }, []);\n\n  // derived stats — memoized\n  const stats = useMemo(() => {\n    const todayAppointments = appointments.length;\n    const totalPatients = patients.length;\n    const pendingReports = appointments.filter((a) => a.status === \"Pending\").length;\n    const criticalPatients = patients.filter((p) => p.status === \"critical\").length;\n    return { todayAppointments, totalPatients, pendingReports, criticalPatients };\n  }, [appointments, patients]);\n\n  // appointment chart data\n  const appointmentChartData = useMemo(() => {\n    const statuses = [\"Confirmed\", \"Pending\", \"Completed\"];\n    return statuses.map((s) => ({ status: s, count: appointments.filter((a) => a.status === s).length }));\n  }, [appointments]);\n\n  // patients by status for pie chart\n  const patientsByStatus = useMemo(() => {\n    const groups = {};\n    patients.forEach((p) => (groups[p.status] = (groups[p.status] || 0) + 1));\n    return Object.keys(groups).map((k, i) => ({ name: k, value: groups[k], color: COLORS[i % COLORS.length] }));\n  }, [patients]);\n\n  const filteredPatients = patients.filter((p) => {\n    const nameMatch = p.name.toLowerCase().includes(searchTerm.toLowerCase());\n    const statusMatch = filterStatus ? p.status === filterStatus : true;\n    return nameMatch && statusMatch;\n  });\n\n  const handleMarkNotification = (id) => setNotifications((prev) => prev.filter((n) => n.id !== id));\n\n  // quick actions (mock) — example: generate summary or export\n  const handleQuickAction = (action) => {\n    if (action === \"summary\") {\n      alert(`Daily summary:\\nAppointments: ${stats.todayAppointments}\\nPatients: ${stats.totalPatients}`);\n    }\n    if (action === \"export\") {\n      // simple CSV export of today's appointments (mock)\n      const csv = [\"patientName,time,status\", ...appointments.map(a => `${a.patientName},${a.time},${a.status}`)].join(\"\\n\");\n      const blob = new Blob([csv], { type: \"text/csv\" });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `appointments_${new Date().toISOString().slice(0,10)}.csv`;\n      a.click();\n      URL.revokeObjectURL(url);\n    }\n  };\n\n  return (\n    <Container fluid className=\"mt-4\">\n      <Row className=\"mb-3 align-items-center\">\n        <Col>\n          <h2>Doctor Dashboard</h2>\n          <p className=\"text-muted\">Summary & quick insights — non-repetitive overview.</p>\n        </Col>\n        <Col className=\"text-end\">\n          <Button variant=\"outline-primary\" className=\"me-2\" onClick={() => handleQuickAction(\"summary\")}>Generate Summary</Button>\n          <Button variant=\"outline-success\" onClick={() => handleQuickAction(\"export\")}>Export Appointments</Button>\n        </Col>\n      </Row>\n\n      {/* top stats */}\n      {doctor && (\n        <Card className=\"mb-4 shadow-sm\">\n          <Card.Body className=\"d-flex flex-wrap justify-content-between align-items-center gap-3\">\n            <div>\n              <h5 className=\"mb-0\">Dr. {doctor.name}</h5>\n              <small className=\"text-muted\">{doctor.specialization} • {doctor.email}</small>\n            </div>\n\n            <div className=\"d-flex gap-3\">\n              <Card className=\"text-center p-3\">\n                <div className=\"text-primary\"><CalendarCheckFill size={28} /></div>\n                <div className=\"mt-2\">Today's Appointments</div>\n                <h3 className=\"mb-0\">{stats.todayAppointments}</h3>\n              </Card>\n\n              <Card className=\"text-center p-3\">\n                <div className=\"text-success\"><PersonFill size={28} /></div>\n                <div className=\"mt-2\">Total Patients</div>\n                <h3 className=\"mb-0\">{stats.totalPatients}</h3>\n              </Card>\n\n              <Card className=\"text-center p-3\">\n                <div className=\"text-warning\"><FileTextFill size={28} /></div>\n                <div className=\"mt-2\">Pending Reports</div>\n                <h3 className=\"mb-0\">{stats.pendingReports}</h3>\n              </Card>\n\n              <Card className=\"text-center p-3\">\n                <div className=\"text-danger\">⚠</div>\n                <div className=\"mt-2\">Critical Patients</div>\n                <h3 className=\"mb-0\">{stats.criticalPatients}</h3>\n              </Card>\n            </div>\n          </Card.Body>\n        </Card>\n      )}\n\n      <Row>\n        {/* Appointments mini list */}\n        <Col lg={6} className=\"mb-4\">\n          <Card className=\"h-100 shadow-sm\">\n            <Card.Header>Next Appointments (Quick)</Card.Header>\n            <ListGroup variant=\"flush\">\n              {appointments.slice(0, 6).map((appt) => (\n                <ListGroup.Item key={appt.id} className=\"d-flex justify-content-between align-items-center\">\n                  <div>\n                    <strong>{appt.patientName}</strong>\n                    <div className=\"text-muted small\">{appt.time}</div>\n                  </div>\n                  <Badge bg={badgeVariant(appt.status)}>{appt.status}</Badge>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Card>\n        </Col>\n\n        {/* Charts */}\n        <Col lg={6} className=\"mb-4\">\n          <Row>\n            <Col md={12} className=\"mb-3\">\n              <Card className=\"h-100 shadow-sm p-3\">\n                <Card.Title>Appointments by Status</Card.Title>\n                <div style={{ width: \"100%\", height: 220 }}>\n                  <ResponsiveContainer>\n                    <BarChart data={appointmentChartData} margin={{ top: 10, right: 10, left: 0, bottom: 0 }}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"status\" />\n                      <YAxis allowDecimals={false} />\n                      <Tooltip />\n                      <Bar dataKey=\"count\" fill=\"#8884d8\" />\n                    </BarChart>\n                  </ResponsiveContainer>\n                </div>\n              </Card>\n            </Col>\n\n            <Col md={12}>\n              <Card className=\"h-100 shadow-sm p-3\">\n                <Card.Title>Patients by Status</Card.Title>\n                <div style={{ width: \"100%\", height: 200 }}>\n                  <ResponsiveContainer>\n                    <PieChart>\n                      <Pie data={patientsByStatus} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={70} label>\n                        {patientsByStatus.map((entry, idx) => (\n                          <Cell key={`cell-${idx}`} fill={entry.color} />\n                        ))}\n                      </Pie>\n                      <Tooltip />\n                      <Legend />\n                    </PieChart>\n                  </ResponsiveContainer>\n                </div>\n              </Card>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n\n      {/* Recent patients cards (compact) */}\n      <Card className=\"mb-4 shadow-sm\">\n        <Card.Header>Recent Patients (Compact)</Card.Header>\n        <Card.Body>\n          <Row xs={1} md={2} lg={3} className=\"g-3\">\n            {filteredPatients.slice(0, 6).map((p) => (\n              <Col key={p.id}>\n                <Card className=\"h-100\">\n                  <Card.Body>\n                    <Card.Title>{p.name}</Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted\">{p.gender} • {p.bloodType}</Card.Subtitle>\n                    <div className=\"mb-2 small text-muted\">Age: {p.age}</div>\n\n                    <div className=\"d-flex gap-2\">\n                      <Button size=\"sm\" variant=\"outline-primary\">Open</Button>\n                      <Button size=\"sm\" variant=\"outline-secondary\">Notes</Button>\n                      <Button size=\"sm\" variant=\"outline-danger\">Flag</Button>\n                    </div>\n                  </Card.Body>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Card.Body>\n      </Card>\n\n      {/* Notifications */}\n      <Card className=\"mb-4 shadow-sm\">\n        <Card.Header>Notifications</Card.Header>\n        <ListGroup variant=\"flush\">\n          {notifications.length > 0 ? (\n            notifications.map((note) => (\n              <ListGroup.Item key={note.id} className=\"d-flex justify-content-between align-items-center\">\n                <div>\n                  <Badge bg={badgeVariant(note.type)} className=\"me-2\">{note.type.toUpperCase()}</Badge>\n                  {note.message}\n                </div>\n                <Button size=\"sm\" variant=\"outline-secondary\" onClick={() => handleMarkNotification(note.id)}>Mark as read</Button>\n              </ListGroup.Item>\n            ))\n          ) : (\n            <ListGroup.Item>No new notifications</ListGroup.Item>\n          )}\n        </ListGroup>\n      </Card>\n\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}